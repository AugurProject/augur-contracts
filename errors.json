{
    "0x": "no response or bad input",
    "closeMarket": {
        "0": "fail/trading not over yet/event not expired or closed already",
        "-1": "Market has no cash anyway / already closed",
        "-2": "0 outcome",
        "-4": "Outcome .5 once, pushback and retry",
        "-6": "bonded pushed forward market not ready to be resolved",
        "-7": "event not reportable >.99"
    },
    "submitReportHash": {
        "0": "could not set report hash",
        "-1": "reporter (you) doesn't (don't) exist, or voting period over or hasn't started yet",
        "-2": "not in hash submitting timeframe or event doesn't exist / not a valid event expiring then",
        "-4": "already resolved",
        "-5": ".99 market",
        "-6": "no markets"
    },
    "submitReport": {
        "-1": "has already reported",
        "-2": "reporter (you) doesn't (don't) exist, or voting period over or hasn't started yet",
        "-3": "hash doesn't match",
        "-4": "no rep",
        "-5": "bad report",
        "-6": "hash not low enough",
        "-8": "invalid event",
        "-9": "already resolved",
        "-10": "<24 hr left in period, too late to report, able to put up readj. bonds though"
    },
    "claimProceeds": {
        "0": "reporting not done",
        "-1": "trader doesn't exist"
    },
    "penalizeNotEnoughReports": {
        "-1": "already done",
        "-2": "hasn't reported this period"
    },
    "penalizationCatchup": {
        "-2": "can only be called during the first half of the reporting period"
    },
    "penalizeWrong": {
        "-1": "pushed back event already resolved, so can't redistribute rep based off of its original expected expiration period",
        "-2": "already past first half of new period and needed to penalize before then",
        "-3": "need to do not enough reports penalization [or lackthereof]"
    },
    "collectFees": {
        "-2": "needs to be second half of reporting period to claim rep [1st half is when redistribution is done]"
    },
    "slashRep": {
        "0": "not a valid claim",
        "-2": "reporter doesn't exist"
    },
    "createSubbranch": {
        "-1": "bad input or parent doesn't exist",
        "-2": "no money for creation fee or branch already exists"
    },
    "createEvent": {
        "0": "not enough money to pay fees or event already exists",
        "-1": "we're either already past that date, branch doesn't exist, or description is bad",
        "-2": "max value < min value"
    },
    "createMarket": {
        "-1": "bad input or parent doesn't exist",
        "-2": "too many events",
        "-3": "too many outcomes",
        "-4": "not enough money or market already exists",
        "-5": "fee too low",
        "-6": "duplicate events",
        "-7": "event already expired"
    },
    "createSingleEventMarket": {
        "0": "not enough money to pay fees or event already exists",
        "-1": "we're either already past that date, branch doesn't exist, or description is bad, or bad input or parent doesn't exist",
        "-2": "max value < min value",
        "-3": "too many outcomes",
        "-4": "not enough money",
        "-5": "fee too low",
        "-6": "duplicate events",
        "-7": "event already expired",
        "-8": "market already exists",
        "-9": "would expire during non-reporting fork period"
    },
    "sendReputation": {
        "0": "not enough reputation",
        "-1": "Your reputation account was just created! Earn some reputation before you can send to others",
        "-2": "Receiving address doesn't exist"
    },
    "buy": {
        "-1": "amount/price bad or no market",
        "-2": "oracle-only branch",
        "-4": "not enough money or shares"
    },
    "sell": {
        "-1": "amount/price bad or no market",
        "-2": "oracle only branch",
        "-4": "not enough money or shares"
    },
    "trade": {
        "-1": "oracle only branch",
        "-2": "bad trade hash",
        "-3": "trader doesn't exist / own shares in this market",
        "-4": "must buy at least .00000001 in value",
        "10": "insufficient balance"
    },
    "INSUFFICIENT_LIQUIDITY": {
        "error": 42,
        "message": "insufficient liquidity to generate order book"
    },
    "INITIAL_PRICE_OUT_OF_BOUNDS": {
        "error": 43,
        "message": "one or more initial fair prices are out-of-bounds"
    }, 
    "DB_DELETE_FAILED": {
        "error": 97,
        "message": "database delete failed"
    },
    "DB_WRITE_FAILED": {
        "error": 98,
        "message": "database write failed"
    },
    "DB_READ_FAILED": {
        "error": 99,
        "message": "database read failed"
    },
    "INVALID_CONTRACT_PARAMETER": {
        "error": 400,
        "message": "cannot send object parameter to contract"
    },
    "NOT_LOGGED_IN": {
        "error": 401,
        "message": "not logged in"
    },
    "PARAMETER_NUMBER_ERROR": {
        "error": 402,
        "message": "wrong number of parameters"
    },
    "BAD_CREDENTIALS": {
        "error": 403,
        "message": "incorrect handle or password"
    },
    "TRANSACTION_NOT_FOUND": {
        "error": 404,
        "message": "transaction not found"
    },
    "PASSWORD_TOO_SHORT": {
        "error": 405,
        "message": "password must be at least 6 characters long"
    },
    "NULL_CALL_RETURN": {
        "error": 406,
        "message": "expected contract call to return value, received null"
    },
    "NULL_RESPONSE": {
        "error": 407,
        "message": "expected transaction hash from Ethereum node, received null"
    },
    "NO_RESPONSE": {
        "error": 408,
        "message": "no response"
    },
    "INVALID_RESPONSE": {
        "error": 409,
        "message": "could not parse response from Ethereum node"
    },
    "LOCAL_NODE_FAILURE": {
        "error": 410,
        "message": "RPC request to local Ethereum node failed"
    },
    "HOSTED_NODE_FAILURE": {
        "error": 411,
        "message": "RPC request to hosted nodes failed"
    },
    "HANDLE_TAKEN": {
        "error": 422,
        "message": "handle already taken"
    },
    "FILTER_NOT_CREATED": {
        "error": 450,
        "message": "filter could not be created"
    },
    "TRANSACTION_FAILED": {
        "error": 500,
        "message": "transaction failed"
    },
    "TRANSACTION_NOT_CONFIRMED": {
        "error": 501,
        "message": "polled network but could not confirm transaction"
    },
    "DUPLICATE_TRANSACTION": {
        "error": 502,
        "message": "duplicate transaction"
    },
    "RAW_TRANSACTION_ERROR": {
        "error": 503,
        "message": "error sending client-side transaction"
    },
    "RLP_ENCODING_ERROR": {
        "error": 504,
        "message": "RLP encoding error"
    },
    "NO_MARKET_INFO": {
        "error": 505,
        "message": "could not retrieve market data"
    },
    "RPC_TIMEOUT": {
        "error": 599,
        "message": "timed out while waiting for Ethereum network response"
    },
    "LOOPBACK_NOT_FOUND": {
        "error": 650,
        "message": "loopback interface required for synchronous local commands"
    },
    "ETHEREUM_NOT_FOUND": {
        "error": 651,
        "message": "no active ethereum node(s) found"
    },
    "ROOT_NOT_FOUND": {
        "error": 700,
        "message": "no LS-LMSR objectve function solution found"
    },
    "CHECK_ORDER_BOOK_FAILED": {
        "error": 710,
        "message": "could not check order book using current prices"
    }
}
