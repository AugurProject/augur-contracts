{
  "events": {
    "Approval": {
      "contract": "ConvertRep", 
      "inputs": [
        {
          "indexed": true, 
          "name": "owner", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "spender", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "branch", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "value", 
          "type": "int256"
        }
      ], 
      "name": "Approval(int256,int256,int256,int256)", 
      "signature": "0x844a26ab2838326c73b20040c15d8ec743025cbae630958deca3bcfd84b294c7"
    }, 
    "CancelOrder": {
      "contract": "Orders", 
      "inputs": [
        {
          "indexed": true, 
          "name": "market", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "fxpPrice", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "fxpAmount", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "orderID", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "outcome", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "type", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "cashRefund", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "sharesRefund", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "CancelOrder(int256,int256,int256,int256,int256,int256,int256,int256,int256,int256)", 
      "signature": "0xdf3127e20eda11f7a6797616b2793068dd0b81bdab4b90bd6dfa28f1aeebc167"
    }, 
    "CompleteSets": {
      "contract": "Orders", 
      "inputs": [
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "market", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "type", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "fxpAmount", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "numOutcomes", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "fxpFee", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "CompleteSets(int256,int256,int256,int256,int256,int256,int256)", 
      "signature": "0x945db29610eb8098cf5a5e91661ae60f068296cfd6efb2d45f4913184025d79a"
    }, 
    "DecreaseTradingFee": {
      "contract": "DecreaseTradingFee", 
      "inputs": [
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "branch", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "marketID", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "fxpTradingFee", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "DecreaseTradingFee(int256,int256,int256,int256,int256)", 
      "signature": "0x46eea5a4826e795cf346d1a194e1972b3a864edca600dad62f4f4d6198e360b9"
    }, 
    "DepositEther": {
      "contract": "Cash", 
      "inputs": [
        {
          "indexed": true, 
          "name": "sender", 
          "type": "address"
        }, 
        {
          "indexed": false, 
          "name": "value", 
          "type": "uint256"
        }, 
        {
          "indexed": false, 
          "name": "balance", 
          "type": "uint256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "uint256"
        }
      ], 
      "name": "DepositEther(address,uint256,uint256,uint256)", 
      "signature": "0xf5bb9b68d45c1515ef5533fbb44eb07ba49a7ac722cd3362f1dfd3de4ed077bc"
    }, 
    "InitiateWithdrawEther": {
      "contract": "Cash", 
      "inputs": [
        {
          "indexed": true, 
          "name": "sender", 
          "type": "address"
        }, 
        {
          "indexed": false, 
          "name": "value", 
          "type": "uint256"
        }, 
        {
          "indexed": false, 
          "name": "balance", 
          "type": "uint256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "uint256"
        }
      ], 
      "name": "InitiateWithdrawEther(address,uint256,uint256,uint256)", 
      "signature": "0x0e385aa5ed1b972c3fa3b2b49900ac67638c6525baf513d0ba6542b58e0db332"
    }, 
    "MakeOrder": {
      "contract": "Orders", 
      "inputs": [
        {
          "indexed": true, 
          "name": "market", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "type", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "fxpPrice", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "fxpAmount", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "outcome", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "orderID", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "fxpMoneyEscrowed", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "fxpSharesEscrowed", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "tradeGroupID", 
          "type": "int256"
        }
      ], 
      "name": "MakeOrder(int256,int256,int256,int256,int256,int256,int256,int256,int256,int256,int256)", 
      "signature": "0x5010789abe4a086a3c2036fe15a2c2c69e70639bdf136aafd37c403c0a2a0843"
    }, 
    "TakeAskOrder": {
      "contract": "Orders", 
      "inputs": [
        {
          "indexed": true, 
          "name": "market", 
          "type": "address"
        }, 
        {
          "indexed": true, 
          "name": "sender", 
          "type": "address"
        }, 
        {
          "indexed": true, 
          "name": "owner", 
          "type": "address"
        }, 
        {
          "indexed": false, 
          "name": "type", 
          "type": "uint256"
        }, 
        {
          "indexed": false, 
          "name": "fxpPrice", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "fxpAmount", 
          "type": "uint256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "uint256"
        }, 
        {
          "indexed": false, 
          "name": "orderID", 
          "type": "address"
        }, 
        {
          "indexed": false, 
          "name": "outcome", 
          "type": "uint256"
        }, 
        {
          "indexed": false, 
          "name": "fxpAskerSharesFilled", 
          "type": "uint256"
        }, 
        {
          "indexed": false, 
          "name": "fxpAskerMoneyFilled", 
          "type": "uint256"
        }, 
        {
          "indexed": false, 
          "name": "fxpBidderMoneyFilled", 
          "type": "uint256"
        }
      ], 
      "name": "TakeAskOrder(address,address,address,uint256,int256,uint256,uint256,address,uint256,uint256,uint256,uint256)", 
      "signature": "0x2010f9b3a8f949972f92577110c41af4cd03d4d691d210296f54ff14fb66434c"
    }, 
    "TakeBidOrder": {
      "contract": "Orders", 
      "inputs": [
        {
          "indexed": true, 
          "name": "market", 
          "type": "address"
        }, 
        {
          "indexed": true, 
          "name": "sender", 
          "type": "address"
        }, 
        {
          "indexed": true, 
          "name": "owner", 
          "type": "address"
        }, 
        {
          "indexed": false, 
          "name": "type", 
          "type": "uint256"
        }, 
        {
          "indexed": false, 
          "name": "fxpPrice", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "fxpAmount", 
          "type": "uint256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "uint256"
        }, 
        {
          "indexed": false, 
          "name": "orderID", 
          "type": "address"
        }, 
        {
          "indexed": false, 
          "name": "outcome", 
          "type": "uint256"
        }, 
        {
          "indexed": false, 
          "name": "fxpAskerSharesFilled", 
          "type": "uint256"
        }, 
        {
          "indexed": false, 
          "name": "fxpAskerMoneyFilled", 
          "type": "uint256"
        }, 
        {
          "indexed": false, 
          "name": "fxpBidderSharesFilled", 
          "type": "uint256"
        }, 
        {
          "indexed": false, 
          "name": "fxpBidderMoneyFilled", 
          "type": "uint256"
        }
      ], 
      "name": "TakeBidOrder(address,address,address,uint256,int256,uint256,uint256,address,uint256,uint256,uint256,uint256,uint256)", 
      "signature": "0x26dcd240923faf78c4b874639419b00701f8d76fbd36e0a40a1790379b9f9efb"
    }, 
    "Transfer": {
      "contract": "ConvertRep", 
      "inputs": [
        {
          "indexed": true, 
          "name": "from", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "to", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "value", 
          "type": "int256"
        }
      ], 
      "name": "Transfer(int256,int256,int256)", 
      "signature": "0x5bdd5df26f7d33d24539edbbf5e44bf2601c0af9d82b0c250be38177dc9214ac"
    }, 
    "WithdrawEther": {
      "contract": "Cash", 
      "inputs": [
        {
          "indexed": true, 
          "name": "sender", 
          "type": "address"
        }, 
        {
          "indexed": false, 
          "name": "value", 
          "type": "uint256"
        }, 
        {
          "indexed": false, 
          "name": "balance", 
          "type": "uint256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "uint256"
        }
      ], 
      "name": "WithdrawEther(address,uint256,uint256,uint256)", 
      "signature": "0xac4836aed5bf8aef8b1d757440371ca62b17940cfd5035ee639ddc0de08a7b60"
    }, 
    "closeMarketLogReturn": {
      "contract": "CloseMarket", 
      "inputs": [
        {
          "indexed": false, 
          "name": "returnValue", 
          "type": "int256"
        }
      ], 
      "name": "closeMarketLogReturn(int256)", 
      "signature": "0xe6a13f8c01cf0b57d59c7b99a6c035e45fc4e7bc132aacc0d1d0abd63c8acb2d"
    }, 
    "consensusLogReturn": {
      "contract": "Consensus", 
      "inputs": [
        {
          "indexed": false, 
          "name": "returnValue", 
          "type": "int256"
        }
      ], 
      "name": "consensusLogReturn(int256)", 
      "signature": "0xdf8df177539ff33fe95181e4520f7ab1f73c5ade00e1a44bb39d23a8c6c8d1b4"
    }, 
    "fundedAccount": {
      "contract": "ClaimInitialRep", 
      "inputs": [
        {
          "indexed": true, 
          "name": "branch", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "cashBalance", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "repBalance", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "fundedAccount(int256,int256,int256,int256,int256)", 
      "signature": "0x07c5737424a500b7f375ea2f9cda4c334584aab65715af51cf56c5ec805e6d6c"
    }, 
    "logOutcome": {
      "contract": "Events", 
      "inputs": [
        {
          "indexed": true, 
          "name": "event", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "outcome", 
          "type": "int256"
        }
      ], 
      "name": "logOutcome(int256,int256)", 
      "signature": "0x1374fde3ddd8b0d23ab6da9b59a3ce24d61d0415543f99514f6f83a9084788e9"
    }, 
    "makeReportsLogReturn": {
      "contract": "MakeReports", 
      "inputs": [
        {
          "indexed": false, 
          "name": "returnValue", 
          "type": "int256"
        }
      ], 
      "name": "makeReportsLogReturn(int256)", 
      "signature": "0x7c9b9fadbf53400f2d317941955e7bc9cfe45d78ce2b076b73aeef8036bb4ec1"
    }, 
    "marketCreated": {
      "contract": "CreateMarket", 
      "inputs": [
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "marketID", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "topic", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "branch", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "fxpMarketCreationFee", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "marketCreated(int256,int256,int256,int256,int256,int256)", 
      "signature": "0xf955703eba6620a1c715687505574e8646d92751b9c78652ea8281f4eba1e4f5"
    }, 
    "penalize": {
      "contract": "Consensus", 
      "inputs": [
        {
          "indexed": true, 
          "name": "user", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "outcome", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "oldrep", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "repchange", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "newafterrep", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "p", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "reportValue", 
          "type": "int256"
        }
      ], 
      "name": "penalize(int256,int256,int256,int256,int256,int256,int256)", 
      "signature": "0x6995f42d98799c0eb89e06640c75123c28e99a5c0762fa1b5c3f0264f87a24c9"
    }
  }, 
  "functions": {
    "Backstops": {
      "adjForkBondPaid": {
        "inputs": [
          "event", 
          "amount"
        ], 
        "label": "Adj Fork Bond Paid", 
        "method": "adjForkBondPaid", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "doRoundTwoRefund": {
        "inputs": [
          "sender", 
          "event"
        ], 
        "label": "Do Round Two Refund", 
        "method": "doRoundTwoRefund", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getBondAmount": {
        "inputs": [
          "event"
        ], 
        "label": "Get Bond Amount", 
        "method": "getBondAmount", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getBondPaid": {
        "inputs": [
          "event"
        ], 
        "label": "Get Bond Paid", 
        "method": "getBondPaid", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getBondPoster": {
        "inputs": [
          "event"
        ], 
        "label": "Get Bond Poster", 
        "method": "getBondPoster", 
        "returns": "address", 
        "signature": [
          "int256"
        ]
      }, 
      "getBondReturned": {
        "inputs": [
          "event"
        ], 
        "label": "Get Bond Returned", 
        "method": "getBondReturned", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getDisputedOverEthics": {
        "inputs": [
          "event"
        ], 
        "label": "Get Disputed Over Ethics", 
        "method": "getDisputedOverEthics", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getFinal": {
        "inputs": [
          "event"
        ], 
        "label": "Get Final", 
        "method": "getFinal", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getForkBondPaid": {
        "inputs": [
          "event"
        ], 
        "label": "Get Fork Bond Paid", 
        "method": "getForkBondPaid", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getForkBondPoster": {
        "inputs": [
          "event"
        ], 
        "label": "Get Fork Bond Poster", 
        "method": "getForkBondPoster", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getForkedOverEthicality": {
        "inputs": [
          "event"
        ], 
        "label": "Get Forked Over Ethicality", 
        "method": "getForkedOverEthicality", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getMoved": {
        "inputs": [
          "event"
        ], 
        "label": "Get Moved", 
        "method": "getMoved", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getOriginalBranch": {
        "inputs": [
          "event"
        ], 
        "label": "Get Original Branch", 
        "method": "getOriginalBranch", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getOriginalEthicality": {
        "inputs": [
          "event"
        ], 
        "label": "Get Original Ethicality", 
        "method": "getOriginalEthicality", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getOriginalOutcome": {
        "inputs": [
          "event"
        ], 
        "label": "Get Original Outcome", 
        "method": "getOriginalOutcome", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getOriginalVotePeriod": {
        "inputs": [
          "event"
        ], 
        "label": "Get Original Vote Period", 
        "method": "getOriginalVotePeriod", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getResolved": {
        "inputs": [
          "branch", 
          "forkPeriod"
        ], 
        "label": "Get Resolved", 
        "method": "getResolved", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getRoundTwo": {
        "inputs": [
          "event"
        ], 
        "label": "Get Round Two", 
        "method": "getRoundTwo", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "increaseBondPaid": {
        "inputs": [
          "event", 
          "amount"
        ], 
        "label": "Increase Bond Paid", 
        "method": "increaseBondPaid", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setBondAmount": {
        "inputs": [
          "event", 
          "amount"
        ], 
        "label": "Set Bond Amount", 
        "method": "setBondAmount", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setBondPoster": {
        "inputs": [
          "event", 
          "bondPoster"
        ], 
        "label": "Set Bond Poster", 
        "method": "setBondPoster", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setBondReturned": {
        "inputs": [
          "event"
        ], 
        "label": "Set Bond Returned", 
        "method": "setBondReturned", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "setDisputedOverEthics": {
        "inputs": [
          "event"
        ], 
        "label": "Set Disputed Over Ethics", 
        "method": "setDisputedOverEthics", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "setFinal": {
        "inputs": [
          "event"
        ], 
        "label": "Set Final", 
        "method": "setFinal", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "setForkBondPoster": {
        "inputs": [
          "event", 
          "poster"
        ], 
        "label": "Set Fork Bond Poster", 
        "method": "setForkBondPoster", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setForkedOverEthicality": {
        "inputs": [
          "event"
        ], 
        "label": "Set Forked Over Ethicality", 
        "method": "setForkedOverEthicality", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "setMoved": {
        "inputs": [
          "event"
        ], 
        "label": "Set Moved", 
        "method": "setMoved", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "setOriginalBranch": {
        "inputs": [
          "event", 
          "branch"
        ], 
        "label": "Set Original Branch", 
        "method": "setOriginalBranch", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setOriginalEthicality": {
        "inputs": [
          "event", 
          "ethicality"
        ], 
        "label": "Set Original Ethicality", 
        "method": "setOriginalEthicality", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setOriginalOutcome": {
        "inputs": [
          "event", 
          "originalOutcome"
        ], 
        "label": "Set Original Outcome", 
        "method": "setOriginalOutcome", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setOriginalVotePeriod": {
        "inputs": [
          "event", 
          "period"
        ], 
        "label": "Set Original Vote Period", 
        "method": "setOriginalVotePeriod", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setResolved": {
        "inputs": [
          "branch", 
          "forkPeriod", 
          "winner"
        ], 
        "label": "Set Resolved", 
        "method": "setResolved", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setRoundTwo": {
        "inputs": [
          "event", 
          "roundTwo"
        ], 
        "label": "Set Round Two", 
        "method": "setRoundTwo", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setRoundTwoRefund": {
        "inputs": [
          "event", 
          "amount"
        ], 
        "label": "Set Round Two Refund", 
        "method": "setRoundTwoRefund", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "BinaryForkResolve": {
      "binaryForkResolve": {
        "inputs": [
          "branch", 
          "event", 
          "bond", 
          "periodLength", 
          "votingPeriodEvent", 
          "winner"
        ], 
        "label": "Binary Fork Resolve", 
        "method": "binaryForkResolve", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "BinaryMarketResolve": {
      "resolveBinary": {
        "inputs": [
          "event", 
          "market", 
          "branch", 
          "votingPeriodEvent"
        ], 
        "label": "Resolve Binary", 
        "method": "resolveBinary", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "BinaryOrCategoricalPayouts": {
      "payoutBinaryOrCategoricalMarket": {
        "inputs": [
          "sender", 
          "market", 
          "event", 
          "numOutcomes"
        ], 
        "label": "Payout Binary Or Categorical Market", 
        "method": "payoutBinaryOrCategoricalMarket", 
        "returns": "uint256", 
        "signature": [
          "address", 
          "address", 
          "address", 
          "uint256"
        ]
      }, 
      "payoutIndeterminateBinaryOrCategoricalMarket": {
        "inputs": [
          "sender", 
          "market", 
          "event", 
          "numOutcomes"
        ], 
        "label": "Payout Indeterminate Binary Or Categorical Market", 
        "method": "payoutIndeterminateBinaryOrCategoricalMarket", 
        "returns": "uint256", 
        "signature": [
          "address", 
          "address", 
          "address", 
          "uint256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "Branches": {
      "addCurrency": {
        "inputs": [
          "branch", 
          "currency", 
          "rate", 
          "rateContract"
        ], 
        "label": "Add Currency", 
        "method": "addCurrency", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "addMarketToBranch": {
        "inputs": [
          "branch", 
          "market"
        ], 
        "label": "Add Market To Branch", 
        "method": "addMarketToBranch", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "addNewETHContract": {
        "inputs": [
          "branch", 
          "currency"
        ], 
        "label": "Add New ETH Contract", 
        "method": "addNewETHContract", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "disableCurrency": {
        "inputs": [
          "branch", 
          "currency"
        ], 
        "label": "Disable Currency", 
        "method": "disableCurrency", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getBaseReporters": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Base Reporters", 
        "method": "getBaseReporters", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getBranchByNum": {
        "inputs": [
          "branchNumber"
        ], 
        "label": "Get Branch By Num", 
        "method": "getBranchByNum", 
        "returns": "hash", 
        "signature": [
          "int256"
        ]
      }, 
      "getBranchCurrency": {
        "inputs": [
          "branch", 
          "index"
        ], 
        "label": "Get Branch Currency", 
        "method": "getBranchCurrency", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getBranchWallet": {
        "inputs": [
          "branch", 
          "currency"
        ], 
        "label": "Get Branch Wallet", 
        "method": "getBranchWallet", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getBranches": {
        "label": "Get Branches", 
        "method": "getBranches", 
        "returns": "hash[]"
      }, 
      "getBranchesStartingAt": {
        "inputs": [
          "index"
        ], 
        "label": "Get Branches Starting At", 
        "method": "getBranchesStartingAt", 
        "returns": "int256[]", 
        "signature": [
          "int256"
        ]
      }, 
      "getCreationDate": {
        "inputs": [
          "ID"
        ], 
        "label": "Get Creation Date", 
        "method": "getCreationDate", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getCurrencyActive": {
        "inputs": [
          "branch", 
          "currency"
        ], 
        "label": "Get Currency Active", 
        "method": "getCurrencyActive", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getCurrencyByContract": {
        "inputs": [
          "branch", 
          "currency"
        ], 
        "label": "Get Currency By Contract", 
        "method": "getCurrencyByContract", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getCurrencyRate": {
        "inputs": [
          "branch", 
          "currency"
        ], 
        "label": "Get Currency Rate", 
        "method": "getCurrencyRate", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getCurrentETHWrapper": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Current ETH Wrapper", 
        "method": "getCurrentETHWrapper", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getEventForkedOver": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Event Forked Over", 
        "method": "getEventForkedOver", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getForkPeriod": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Fork Period", 
        "method": "getForkPeriod", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getForkTime": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Fork Time", 
        "method": "getForkTime", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getInitialBalance": {
        "inputs": [
          "branch", 
          "period", 
          "currency"
        ], 
        "label": "Get Initial Balance", 
        "method": "getInitialBalance", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getMarketIDsInBranch": {
        "inputs": [
          "branch", 
          "initial", 
          "last"
        ], 
        "label": "Get Market I Ds In Branch", 
        "method": "getMarketIDsInBranch", 
        "returns": "int256[]", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getMinTradingFee": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Min Trading Fee", 
        "method": "getMinTradingFee", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getMostRecentChild": {
        "inputs": [
          "ID"
        ], 
        "label": "Get Most Recent Child", 
        "method": "getMostRecentChild", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getNumBranches": {
        "label": "Get Num Branches", 
        "method": "getNumBranches", 
        "returns": "number"
      }, 
      "getNumCurrencies": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Num Currencies", 
        "method": "getNumCurrencies", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getNumMarketsBranch": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Num Markets Branch", 
        "method": "getNumMarketsBranch", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getParent": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Parent", 
        "method": "getParent", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getParentPeriod": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Parent Period", 
        "method": "getParentPeriod", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getPeriodLength": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Period Length", 
        "method": "getPeriodLength", 
        "returns": "int", 
        "signature": [
          "int256"
        ]
      }, 
      "getVotePeriod": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Vote Period", 
        "method": "getVotePeriod", 
        "returns": "int", 
        "signature": [
          "int256"
        ]
      }, 
      "incrementPeriod": {
        "inputs": [
          "branch"
        ], 
        "label": "Increment Period", 
        "method": "incrementPeriod", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "initializeBranch": {
        "fixed": [
          3
        ], 
        "inputs": [
          "ID", 
          "currentVotePeriod", 
          "periodLength", 
          "fxpMinTradingFee", 
          "parentPeriod", 
          "parent", 
          "ethContract", 
          "mostRecentChild"
        ], 
        "label": "Initialize Branch", 
        "method": "initializeBranch", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "reactivateCurrency": {
        "inputs": [
          "branch", 
          "currency"
        ], 
        "label": "Reactivate Currency", 
        "method": "reactivateCurrency", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "removeLastCurrency": {
        "inputs": [
          "branch"
        ], 
        "label": "Remove Last Currency", 
        "method": "removeLastCurrency", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "replaceCurrency": {
        "inputs": [
          "branch", 
          "oldCurrencyIndex", 
          "newCurrency", 
          "newRate", 
          "newRateContract"
        ], 
        "label": "Replace Currency", 
        "method": "replaceCurrency", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setBaseReporters": {
        "inputs": [
          "branch", 
          "num"
        ], 
        "label": "Set Base Reporters", 
        "method": "setBaseReporters", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "setEventForkedOver": {
        "inputs": [
          "branch", 
          "event"
        ], 
        "label": "Set Event Forked Over", 
        "method": "setEventForkedOver", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setForkPeriod": {
        "inputs": [
          "branch"
        ], 
        "label": "Set Fork Period", 
        "method": "setForkPeriod", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "setInitialBalance": {
        "inputs": [
          "branch", 
          "period", 
          "balance", 
          "currency"
        ], 
        "label": "Set Initial Balance", 
        "method": "setInitialBalance", 
        "returns": "unfix", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setMostRecentChild": {
        "inputs": [
          "parent", 
          "child"
        ], 
        "label": "Set Most Recent Child", 
        "method": "setMostRecentChild", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }, 
      "updateCurrencyRate": {
        "inputs": [
          "branch", 
          "currency", 
          "rate", 
          "rateContract"
        ], 
        "label": "Update Currency Rate", 
        "method": "updateCurrencyRate", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "updateNumCurrencies": {
        "inputs": [
          "branch", 
          "num"
        ], 
        "label": "Update Num Currencies", 
        "method": "updateNumCurrencies", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }
    }, 
    "CancelOrder": {
      "cancelOrder": {
        "inputs": [
          "sender", 
          "orderID"
        ], 
        "label": "Cancel Order", 
        "method": "cancelOrder", 
        "returns": "int256", 
        "signature": [
          "address", 
          "int256"
        ]
      }, 
      "publicCancelOrder": {
        "inputs": [
          "orderID"
        ], 
        "label": "Public Cancel Order", 
        "method": "publicCancelOrder", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "refundOrder": {
        "fixed": [
          2, 
          3
        ], 
        "inputs": [
          "sender", 
          "type", 
          "fxpSharesEscrowed", 
          "fxpMoneyEscrowed", 
          "market", 
          "outcome"
        ], 
        "label": "Refund Order", 
        "method": "refundOrder", 
        "returns": "int256", 
        "signature": [
          "address", 
          "uint256", 
          "uint256", 
          "uint256", 
          "address", 
          "uint256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "Cash": {
      "allowance": {
        "inputs": [
          "owner", 
          "spender"
        ], 
        "label": "Allowance", 
        "method": "allowance", 
        "returns": "unfix", 
        "signature": [
          "address", 
          "address"
        ]
      }, 
      "approve": {
        "events": [
          "Approval"
        ], 
        "inputs": [
          "spender", 
          "value"
        ], 
        "label": "Approve", 
        "method": "approve", 
        "returns": "int256", 
        "signature": [
          "address", 
          "uint256"
        ]
      }, 
      "balanceOf": {
        "inputs": [
          "address"
        ], 
        "label": "Balance Of", 
        "method": "balanceOf", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "depositEther": {
        "fixed": [
          1
        ], 
        "inputs": [
          "sender"
        ], 
        "label": "Deposit Ether", 
        "method": "depositEther", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "address"
        ]
      }, 
      "getDecimals": {
        "label": "Get Decimals", 
        "method": "getDecimals", 
        "returns": "int256"
      }, 
      "getInitiated": {
        "label": "Get Initiated", 
        "method": "getInitiated", 
        "returns": "int256"
      }, 
      "getName": {
        "label": "Get Name", 
        "method": "getName", 
        "returns": "int256"
      }, 
      "getSymbol": {
        "label": "Get Symbol", 
        "method": "getSymbol", 
        "returns": "int256"
      }, 
      "publicDepositEther": {
        "label": "Public Deposit Ether", 
        "method": "publicDepositEther", 
        "returns": "int256"
      }, 
      "publicWithdrawEther": {
        "inputs": [
          "to", 
          "value"
        ], 
        "label": "Public Withdraw Ether", 
        "method": "publicWithdrawEther", 
        "returns": "int256", 
        "signature": [
          "address", 
          "uint256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }, 
      "totalSupply": {
        "label": "Total Supply", 
        "method": "totalSupply", 
        "returns": "unfix"
      }, 
      "transfer": {
        "inputs": [
          "to", 
          "value"
        ], 
        "label": "Transfer", 
        "method": "transfer", 
        "returns": "int256", 
        "signature": [
          "address", 
          "uint256"
        ]
      }, 
      "transferFrom": {
        "inputs": [
          "from", 
          "to", 
          "value"
        ], 
        "label": "Transfer From", 
        "method": "transferFrom", 
        "returns": "int256", 
        "signature": [
          "address", 
          "address", 
          "uint256"
        ]
      }, 
      "withdrawEther": {
        "description": "Convert tradeable Ether token to Ether", 
        "fixed": [
          1
        ], 
        "inputs": [
          "sender", 
          "to", 
          "value"
        ], 
        "label": "Withdraw Ether", 
        "method": "withdrawEther", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "address", 
          "address", 
          "uint256"
        ]
      }
    }, 
    "ClaimInitialRep": {
      "claimInitialRep": {
        "inputs": [
          "parent", 
          "branch"
        ], 
        "label": "Claim Initial Rep", 
        "method": "claimInitialRep", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "ClaimProceeds": {
      "claimProceeds": {
        "inputs": [
          "sender", 
          "market"
        ], 
        "label": "Claim Proceeds", 
        "method": "claimProceeds", 
        "returns": "uint256", 
        "signature": [
          "address", 
          "address"
        ]
      }, 
      "publicClaimProceeds": {
        "inputs": [
          "market"
        ], 
        "label": "Public Claim Proceeds", 
        "method": "publicClaimProceeds", 
        "returns": "uint256", 
        "signature": [
          "address"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "CloseMarket": {
      "internalCloseMarket": {
        "inputs": [
          "market", 
          "sender"
        ], 
        "label": "Internal Close Market", 
        "method": "internalCloseMarket", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "publicCloseMarket": {
        "inputs": [
          "market", 
          "sender"
        ], 
        "label": "Public Close Market", 
        "method": "publicCloseMarket", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "CollectFees": {
      "internalCollectFees": {
        "inputs": [
          "branch", 
          "sender", 
          "currency"
        ], 
        "label": "Internal Collect Fees", 
        "method": "internalCollectFees", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "internalCollectRep": {
        "inputs": [
          "branch", 
          "sender"
        ], 
        "label": "Internal Collect Rep", 
        "method": "internalCollectRep", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "publicCollectFees": {
        "inputs": [
          "branch", 
          "sender", 
          "currency"
        ], 
        "label": "Public Collect Fees", 
        "method": "publicCollectFees", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "publicCollectRep": {
        "inputs": [
          "branch", 
          "sender"
        ], 
        "label": "Public Collect Rep", 
        "method": "publicCollectRep", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "CompleteSets": {
      "buyCompleteSets": {
        "fixed": [
          1
        ], 
        "gas": 698875, 
        "inputs": [
          "sender", 
          "market", 
          "fxpAmount"
        ], 
        "label": "Buy Complete Sets", 
        "method": "buyCompleteSets", 
        "mutable": true, 
        "returns": "int256[]", 
        "send": true, 
        "signature": [
          "address", 
          "address", 
          "uint256"
        ]
      }, 
      "publicBuyCompleteSets": {
        "fixed": [
          1
        ], 
        "inputs": [
          "market", 
          "fxpAmount"
        ], 
        "label": "Public Buy Complete Sets", 
        "method": "publicBuyCompleteSets", 
        "returns": "int256", 
        "signature": [
          "address", 
          "uint256"
        ]
      }, 
      "publicSellCompleteSets": {
        "fixed": [
          1
        ], 
        "inputs": [
          "market", 
          "fxpAmount"
        ], 
        "label": "Public Sell Complete Sets", 
        "method": "publicSellCompleteSets", 
        "returns": "int256", 
        "signature": [
          "address", 
          "uint256"
        ]
      }, 
      "sellCompleteSets": {
        "fixed": [
          1
        ], 
        "gas": 535220, 
        "inputs": [
          "sender", 
          "market", 
          "fxpAmount"
        ], 
        "label": "Sell Complete Sets", 
        "method": "sellCompleteSets", 
        "mutable": true, 
        "returns": "int256[]", 
        "send": true, 
        "signature": [
          "address", 
          "address", 
          "uint256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "Consensus": {
      "penalizeWrong": {
        "inputs": [
          "branch", 
          "event"
        ], 
        "label": "Compare Report To Consensus", 
        "method": "penalizeWrong", 
        "mutable": true, 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "ConsensusData": {
      "decreaseDenominator": {
        "inputs": [
          "branch", 
          "period", 
          "amount"
        ], 
        "label": "Decrease Denominator", 
        "method": "decreaseDenominator", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "doRefund": {
        "inputs": [
          "sender", 
          "refunder"
        ], 
        "label": "Do Refund", 
        "method": "doRefund", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getBaseReportersLastPeriod": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Base Reporters Last Period", 
        "method": "getBaseReportersLastPeriod", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getDenominator": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Get Denominator", 
        "method": "getDenominator", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getFeeFirst": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Get Fee First", 
        "method": "getFeeFirst", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getFeesCollected": {
        "inputs": [
          "branch", 
          "address", 
          "period", 
          "currency"
        ], 
        "label": "Get Fees Collected", 
        "method": "getFeesCollected", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getNotEnoughPenalized": {
        "inputs": [
          "branch", 
          "address", 
          "period"
        ], 
        "label": "Get Not Enough Penalized", 
        "method": "getNotEnoughPenalized", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getPenalized": {
        "inputs": [
          "branch", 
          "period", 
          "sender", 
          "event"
        ], 
        "label": "Get Penalized", 
        "method": "getPenalized", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getPenalizedNum": {
        "inputs": [
          "branch", 
          "period", 
          "sender"
        ], 
        "label": "Get Penalized Num", 
        "method": "getPenalizedNum", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getPenalizedUpTo": {
        "inputs": [
          "branch", 
          "sender"
        ], 
        "label": "Get Penalized Up To", 
        "method": "getPenalizedUpTo", 
        "returns": "number", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getPeriodBalance": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Get Period Balance", 
        "method": "getPeriodBalance", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getRepCollected": {
        "inputs": [
          "branch", 
          "address", 
          "period"
        ], 
        "label": "Get Rep Collected", 
        "method": "getRepCollected", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getRepRedistributionDone": {
        "inputs": [
          "branch", 
          "reporter"
        ], 
        "label": "Get Rep Redistribution Done", 
        "method": "getRepRedistributionDone", 
        "returns": "number", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getSlashed": {
        "inputs": [
          "branch", 
          "votePeriod", 
          "reporter"
        ], 
        "label": "Get Slashed", 
        "method": "getSlashed", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "increaseDenominator": {
        "inputs": [
          "branch", 
          "period", 
          "amount"
        ], 
        "label": "Increase Denominator", 
        "method": "increaseDenominator", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "increasePenalizedNum": {
        "inputs": [
          "branch", 
          "period", 
          "sender", 
          "amount"
        ], 
        "label": "Increase Penalized Num", 
        "method": "increasePenalizedNum", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setBaseReportersLastPeriod": {
        "inputs": [
          "branch", 
          "amount"
        ], 
        "label": "Set Base Reporters Last Period", 
        "method": "setBaseReportersLastPeriod", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "setFeeFirst": {
        "inputs": [
          "branch", 
          "period", 
          "val"
        ], 
        "label": "Set Fee First", 
        "method": "setFeeFirst", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setFeesCollected": {
        "inputs": [
          "branch", 
          "address", 
          "period", 
          "currency"
        ], 
        "label": "Set Fees Collected", 
        "method": "setFeesCollected", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setNotEnoughPenalized": {
        "inputs": [
          "branch", 
          "address", 
          "period"
        ], 
        "label": "Set Not Enough Penalized", 
        "method": "setNotEnoughPenalized", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setPenalized": {
        "inputs": [
          "branch", 
          "period", 
          "sender", 
          "event"
        ], 
        "label": "Set Penalized", 
        "method": "setPenalized", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setPenalizedUpTo": {
        "inputs": [
          "branch", 
          "sender", 
          "period"
        ], 
        "label": "Set Penalized Up To", 
        "method": "setPenalizedUpTo", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setPeriodBalance": {
        "inputs": [
          "branch", 
          "period", 
          "balance"
        ], 
        "label": "Set Period Balance", 
        "method": "setPeriodBalance", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setRefund": {
        "inputs": [
          "refunder", 
          "amount"
        ], 
        "label": "Set Refund", 
        "method": "setRefund", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setRepCollected": {
        "inputs": [
          "branch", 
          "address", 
          "period"
        ], 
        "label": "Set Rep Collected", 
        "method": "setRepCollected", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setSlashed": {
        "inputs": [
          "branch", 
          "votePeriod", 
          "reporter"
        ], 
        "label": "Set Slashed", 
        "method": "setSlashed", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "Controller": {
      "addToWhitelist": {
        "inputs": [
          "address"
        ], 
        "label": "Add To Whitelist", 
        "method": "addToWhitelist", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "assertIsWhitelisted": {
        "inputs": [
          "address"
        ], 
        "label": "Assert Is Whitelisted", 
        "method": "assertIsWhitelisted", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "lookup": {
        "inputs": [
          "key"
        ], 
        "label": "Lookup", 
        "method": "lookup", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "ok": {
        "label": "Ok", 
        "method": "ok", 
        "returns": "int256"
      }, 
      "setValue": {
        "inputs": [
          "key", 
          "newValue"
        ], 
        "label": "Set Value", 
        "method": "setValue", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }
    }, 
    "ConvertRep": {
      "internalConvertToActiveRep": {
        "fixed": [
          1
        ], 
        "inputs": [
          "branch", 
          "fxpValue"
        ], 
        "label": "Internal Convert To Active Rep", 
        "method": "internalConvertToActiveRep", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "internalConvertToDormantRep": {
        "fixed": [
          1
        ], 
        "inputs": [
          "branch", 
          "fxpValue"
        ], 
        "label": "Internal Convert To Dormant Rep", 
        "method": "internalConvertToDormantRep", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "publicConvertToActiveRep": {
        "fixed": [
          1
        ], 
        "inputs": [
          "branch", 
          "fxpValue"
        ], 
        "label": "Public Convert To Active Rep", 
        "method": "publicConvertToActiveRep", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "publicConvertToDormantRep": {
        "fixed": [
          1
        ], 
        "inputs": [
          "branch", 
          "fxpValue"
        ], 
        "label": "Public Convert To Dormant Rep", 
        "method": "publicConvertToDormantRep", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "CreateBranch": {
      "internalCreateSubbranch": {
        "fixed": [
          3
        ], 
        "inputs": [
          "description", 
          "periodLength", 
          "parent", 
          "fxpMinTradingFee", 
          "mostRecentChildBranch"
        ], 
        "label": "Internal Create Subbranch", 
        "method": "internalCreateSubbranch", 
        "returns": "int256", 
        "signature": [
          "bytes", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "publicCreateSubbranch": {
        "fixed": [
          3
        ], 
        "inputs": [
          "description", 
          "periodLength", 
          "parent", 
          "fxpMinTradingFee", 
          "mostRecentChildBranch"
        ], 
        "label": "Public Create Subbranch", 
        "method": "publicCreateSubbranch", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "CreateEvent": {
      "checkEventCreationPreconditions": {
        "fixed": [
          4, 
          5
        ], 
        "inputs": [
          "branch", 
          "periodLength", 
          "description", 
          "expDate", 
          "fxpMinValue", 
          "fxpMaxValue", 
          "numOutcomes", 
          "resolution", 
          "resolutionAddress", 
          "currency", 
          "forkResolveAddress"
        ], 
        "label": "Check Event Creation Preconditions", 
        "method": "checkEventCreationPreconditions", 
        "signature": [
          "int256", 
          "int256", 
          "bytes", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "bytes", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "createEvent": {
        "fixed": [
          4, 
          5
        ], 
        "inputs": [
          "sender", 
          "branch", 
          "description", 
          "expDate", 
          "fxpMinValue", 
          "fxpMaxValue", 
          "numOutcomes", 
          "resolution", 
          "resolutionAddress", 
          "currency", 
          "forkResolveAddress"
        ], 
        "label": "Create Event", 
        "method": "createEvent", 
        "returns": "int256", 
        "signature": [
          "address", 
          "int256", 
          "bytes", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "bytes", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "publicCreateEvent": {
        "fixed": [
          3, 
          4
        ], 
        "inputs": [
          "branch", 
          "description", 
          "expDate", 
          "fxpMinValue", 
          "fxpMaxValue", 
          "numOutcomes", 
          "resolution", 
          "resolutionAddress", 
          "currency", 
          "forkResolveAddress"
        ], 
        "label": "Public Create Event", 
        "method": "publicCreateEvent", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "bytes", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "bytes", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "CreateMarket": {
      "checkMarketCreationPreconditions": {
        "fixed": [
          2
        ], 
        "inputs": [
          "branch", 
          "periodLength", 
          "fxpTradingFee", 
          "event", 
          "expirationDate", 
          "currency"
        ], 
        "label": "Check Market Creation Preconditions", 
        "method": "checkMarketCreationPreconditions", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "createMarket": {
        "fixed": [
          2
        ], 
        "inputs": [
          "sender", 
          "branch", 
          "fxpTradingFee", 
          "event", 
          "tag1", 
          "tag2", 
          "tag3", 
          "extraInfo", 
          "currency", 
          "marketDenominatedIn", 
          "outcomeDenominatedIn"
        ], 
        "label": "Create Market", 
        "method": "createMarket", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "address", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "bytes", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "makeMarket": {
        "fixed": [
          2, 
          8
        ], 
        "inputs": [
          "sender", 
          "branch", 
          "fxpCreationFee", 
          "market", 
          "currency", 
          "wallet", 
          "event", 
          "futurePeriod", 
          "fxpTradingFee", 
          "tag1", 
          "tag2", 
          "tag3", 
          "cumulativeScale", 
          "numOutcomes", 
          "extraInfo", 
          "expirationDate", 
          "shareContracts", 
          "shareWallets", 
          "marketDenominatedIn", 
          "outcomeDenominatedIn"
        ], 
        "label": "Make Market", 
        "method": "makeMarket", 
        "returns": "int256", 
        "signature": [
          "address", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "bytes", 
          "int256", 
          "int256[]", 
          "int256[]", 
          "int256", 
          "int256"
        ]
      }, 
      "publicCreateMarket": {
        "fixed": [
          1
        ], 
        "inputs": [
          "branch", 
          "fxpTradingFee", 
          "event", 
          "tag1", 
          "tag2", 
          "tag3", 
          "extraInfo", 
          "currency", 
          "marketDenominatedIn", 
          "outcomeDenominatedIn"
        ], 
        "label": "Public Create Market", 
        "method": "publicCreateMarket", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "bytes", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "DecreaseTradingFee": {
      "decreaseTradingFee": {
        "events": [
          "DecreaseTradingFee"
        ], 
        "fixed": [
          2
        ], 
        "inputs": [
          "sender", 
          "market", 
          "fxpTradingFee"
        ], 
        "label": "Decrease Trading Fee", 
        "method": "decreaseTradingFee", 
        "returns": "int256", 
        "signature": [
          "address", 
          "address", 
          "uint256"
        ]
      }, 
      "publicDecreaseTradingFee": {
        "events": [
          "DecreaseTradingFee"
        ], 
        "fixed": [
          1
        ], 
        "inputs": [
          "market", 
          "fxpTradingFee"
        ], 
        "label": "Public Decrease Trading Fee", 
        "method": "publicDecreaseTradingFee", 
        "returns": "int256", 
        "signature": [
          "address", 
          "uint256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "EventBondResolution": {
      "resolveEvent": {
        "inputs": [
          "event"
        ], 
        "label": "Resolve Event", 
        "method": "resolveEvent", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "Events": {
      "addMarket": {
        "inputs": [
          "event", 
          "market"
        ], 
        "label": "Add Market", 
        "method": "addMarket", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "addPast24": {
        "inputs": [
          "period"
        ], 
        "label": "Add Past24", 
        "method": "addPast24", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "addReportersPaidSoFar": {
        "inputs": [
          "event"
        ], 
        "label": "Add Reporters Paid So Far", 
        "method": "addReportersPaidSoFar", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getBond": {
        "inputs": [
          "event"
        ], 
        "label": "Get Bond", 
        "method": "getBond", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getChallenged": {
        "inputs": [
          "event"
        ], 
        "label": "Get Challenged", 
        "method": "getChallenged", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getCreationTime": {
        "inputs": [
          "event"
        ], 
        "label": "Get Creation Time", 
        "method": "getCreationTime", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getEarlyResolutionBond": {
        "inputs": [
          "event"
        ], 
        "label": "Get Early Resolution Bond", 
        "method": "getEarlyResolutionBond", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getEthics": {
        "inputs": [
          "event"
        ], 
        "label": "Get Ethics", 
        "method": "getEthics", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getEventBranch": {
        "inputs": [
          "event"
        ], 
        "label": "Get Event Branch", 
        "method": "getEventBranch", 
        "returns": "hash", 
        "signature": [
          "int256"
        ]
      }, 
      "getEventInfo": {
        "inputs": [
          "event"
        ], 
        "label": "Get Event Info", 
        "method": "getEventInfo", 
        "parser": "parseEventInfo", 
        "returns": "hash[]", 
        "signature": [
          "int256"
        ]
      }, 
      "getEventPushedUp": {
        "inputs": [
          "event"
        ], 
        "label": "Get Event Pushed Up", 
        "method": "getEventPushedUp", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getEventResolution": {
        "inputs": [
          "event"
        ], 
        "label": "Get Event Resolution", 
        "method": "getEventResolution", 
        "returns": "string", 
        "signature": [
          "int256"
        ]
      }, 
      "getEventType": {
        "inputs": [
          "event"
        ], 
        "label": "Get Event Type", 
        "method": "getEventType", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getExpiration": {
        "inputs": [
          "event"
        ], 
        "label": "Get Expiration", 
        "method": "getExpiration", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getExtraBond": {
        "inputs": [
          "event"
        ], 
        "label": "Get Extra Bond", 
        "method": "getExtraBond", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getExtraBondPoster": {
        "inputs": [
          "event"
        ], 
        "label": "Get Extra Bond Poster", 
        "method": "getExtraBondPoster", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getFirstPreliminaryOutcome": {
        "inputs": [
          "event"
        ], 
        "label": "Get First Preliminary Outcome", 
        "method": "getFirstPreliminaryOutcome", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getForkEthicality": {
        "inputs": [
          "event"
        ], 
        "label": "Get Fork Ethicality", 
        "method": "getForkEthicality", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getForkOutcome": {
        "inputs": [
          "event"
        ], 
        "label": "Get Fork Outcome", 
        "method": "getForkOutcome", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getForkResolveAddress": {
        "inputs": [
          "event"
        ], 
        "label": "Get Fork Resolve Address", 
        "method": "getForkResolveAddress", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getForked": {
        "inputs": [
          "event"
        ], 
        "label": "Get Forked", 
        "method": "getForked", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getForkedDone": {
        "inputs": [
          "event"
        ], 
        "label": "Get Forked Done", 
        "method": "getForkedDone", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getMarket": {
        "inputs": [
          "event", 
          "marketIndex"
        ], 
        "label": "Get Market", 
        "method": "getMarket", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getMarkets": {
        "inputs": [
          "event"
        ], 
        "label": "Get Markets", 
        "method": "getMarkets", 
        "returns": "int256[]", 
        "signature": [
          "int256"
        ]
      }, 
      "getMaxValue": {
        "inputs": [
          "event"
        ], 
        "label": "Get Max Value", 
        "method": "getMaxValue", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getMinValue": {
        "inputs": [
          "event"
        ], 
        "label": "Get Min Value", 
        "method": "getMinValue", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getMode": {
        "inputs": [
          "event"
        ], 
        "label": "Get Mode", 
        "method": "getMode", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getNumMarkets": {
        "inputs": [
          "event"
        ], 
        "label": "Get Num Markets", 
        "method": "getNumMarkets", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getNumOutcomes": {
        "inputs": [
          "event"
        ], 
        "label": "Get Num Outcomes", 
        "method": "getNumOutcomes", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getOriginalExpiration": {
        "inputs": [
          "event"
        ], 
        "label": "Get Original Expiration", 
        "method": "getOriginalExpiration", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getOutcome": {
        "inputs": [
          "event"
        ], 
        "label": "Get Outcome", 
        "method": "getOutcome", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getPast24": {
        "inputs": [
          "period"
        ], 
        "label": "Get Past24", 
        "method": "getPast24", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getRejected": {
        "inputs": [
          "event"
        ], 
        "label": "Get Rejected", 
        "method": "getRejected", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getRejectedPeriod": {
        "inputs": [
          "event"
        ], 
        "label": "Get Rejected Period", 
        "method": "getRejectedPeriod", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getReportersPaidSoFar": {
        "inputs": [
          "event"
        ], 
        "label": "Get Reporters Paid So Far", 
        "method": "getReportersPaidSoFar", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getReportingThreshold": {
        "inputs": [
          "event"
        ], 
        "label": "Get Reporting Threshold", 
        "method": "getReportingThreshold", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getResolutionAddress": {
        "inputs": [
          "event"
        ], 
        "label": "Get Resolution Address", 
        "method": "getResolutionAddress", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getResolutionLength": {
        "inputs": [
          "event"
        ], 
        "label": "Get Resolution Length", 
        "method": "getResolutionLength", 
        "returns": "int", 
        "signature": [
          "int256"
        ]
      }, 
      "getResolveBondPoster": {
        "inputs": [
          "event"
        ], 
        "label": "Get Resolve Bond Poster", 
        "method": "getResolveBondPoster", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getUncaughtOutcome": {
        "inputs": [
          "event"
        ], 
        "label": "Get Uncaught Outcome", 
        "method": "getUncaughtOutcome", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "initializeEvent": {
        "fixed": [
          3, 
          4
        ], 
        "inputs": [
          "id", 
          "branch", 
          "expirationDate", 
          "fxpMinValue", 
          "fxpMaxValue", 
          "numOutcomes", 
          "resolution", 
          "resolutionAddress", 
          "resolveBondPoster", 
          "forkResolveAddress"
        ], 
        "label": "Initialize Event", 
        "method": "initializeEvent", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "bytes", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setBond": {
        "inputs": [
          "event", 
          "bond"
        ], 
        "label": "Set Bond", 
        "method": "setBond", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setBranch": {
        "inputs": [
          "event", 
          "branch"
        ], 
        "label": "Set Branch", 
        "method": "setBranch", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setChallenged": {
        "inputs": [
          "event"
        ], 
        "label": "Set Challenged", 
        "method": "setChallenged", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "setCreationTime": {
        "inputs": [
          "event"
        ], 
        "label": "Set Creation Time", 
        "method": "setCreationTime", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "setEarlyResolutionBond": {
        "inputs": [
          "event", 
          "bond"
        ], 
        "label": "Set Early Resolution Bond", 
        "method": "setEarlyResolutionBond", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setEthics": {
        "inputs": [
          "event", 
          "ethicality"
        ], 
        "label": "Set Ethics", 
        "method": "setEthics", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setEventPushedUp": {
        "inputs": [
          "event", 
          "val"
        ], 
        "label": "Set Event Pushed Up", 
        "method": "setEventPushedUp", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setExpiration": {
        "inputs": [
          "event", 
          "date"
        ], 
        "label": "Set Expiration", 
        "method": "setExpiration", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setExtraBond": {
        "inputs": [
          "event", 
          "extraBond"
        ], 
        "label": "Set Extra Bond", 
        "method": "setExtraBond", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setExtraBondPoster": {
        "inputs": [
          "event", 
          "poster"
        ], 
        "label": "Set Extra Bond Poster", 
        "method": "setExtraBondPoster", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setFirstPreliminaryOutcome": {
        "inputs": [
          "event", 
          "outcome"
        ], 
        "label": "Set First Preliminary Outcome", 
        "method": "setFirstPreliminaryOutcome", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setForkDone": {
        "inputs": [
          "event"
        ], 
        "label": "Set Fork Done", 
        "method": "setForkDone", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "setForkEthicality": {
        "inputs": [
          "event", 
          "value"
        ], 
        "label": "Set Fork Ethicality", 
        "method": "setForkEthicality", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setForkOutcome": {
        "inputs": [
          "event", 
          "value"
        ], 
        "label": "Set Fork Outcome", 
        "method": "setForkOutcome", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setForked": {
        "inputs": [
          "event"
        ], 
        "label": "Set Forked", 
        "method": "setForked", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "setMode": {
        "inputs": [
          "event", 
          "mode"
        ], 
        "label": "Set Mode", 
        "method": "setMode", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setOriginalExpiration": {
        "inputs": [
          "event", 
          "date"
        ], 
        "label": "Set Original Expiration", 
        "method": "setOriginalExpiration", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setOutcome": {
        "inputs": [
          "ID", 
          "outcome"
        ], 
        "label": "Set Outcome", 
        "method": "setOutcome", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setRejected": {
        "inputs": [
          "event", 
          "period"
        ], 
        "label": "Set Rejected", 
        "method": "setRejected", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setThreshold": {
        "inputs": [
          "event", 
          "threshold"
        ], 
        "label": "Set Threshold", 
        "method": "setThreshold", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setUncaughtOutcome": {
        "inputs": [
          "event", 
          "outcome"
        ], 
        "label": "Set Uncaught Outcome", 
        "method": "setUncaughtOutcome", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "ExpiringEvents": {
      "addEvent": {
        "inputs": [
          "branch", 
          "futurePeriod", 
          "event", 
          "subsidy", 
          "currency", 
          "wallet", 
          "afterFork"
        ], 
        "label": "Add Event", 
        "method": "addEvent", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "addReportToReportsSubmitted": {
        "inputs": [
          "branch", 
          "period", 
          "user"
        ], 
        "label": "Add Report To Reports Submitted", 
        "method": "addReportToReportsSubmitted", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "addRoundTwo": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Add Round Two", 
        "method": "addRoundTwo", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "addToWeightOfReport": {
        "inputs": [
          "period", 
          "event", 
          "report", 
          "amount"
        ], 
        "label": "Add To Weight Of Report", 
        "method": "addToWeightOfReport", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "adjustPeriodFeeValue": {
        "inputs": [
          "branch", 
          "expIndex", 
          "amount"
        ], 
        "label": "Adjust Period Fee Value", 
        "method": "adjustPeriodFeeValue", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "countReportAsSubmitted": {
        "inputs": [
          "branch", 
          "votePeriod", 
          "event", 
          "sender", 
          "weight"
        ], 
        "label": "Count Report As Submitted", 
        "method": "countReportAsSubmitted", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "deleteEvent": {
        "inputs": [
          "branch", 
          "period", 
          "event"
        ], 
        "label": "Delete Event", 
        "method": "deleteEvent", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getActiveReporters": {
        "inputs": [
          "branch", 
          "period", 
          "from", 
          "to"
        ], 
        "label": "Get Active Reporters", 
        "method": "getActiveReporters", 
        "returns": "int256[]", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getAfterFork": {
        "inputs": [
          "branch", 
          "votePeriod"
        ], 
        "label": "Get After Fork", 
        "method": "getAfterFork", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getAfterRep": {
        "inputs": [
          "branch", 
          "period", 
          "sender"
        ], 
        "label": "Get After Rep", 
        "method": "getAfterRep", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getBeforeRep": {
        "inputs": [
          "branch", 
          "period", 
          "sender"
        ], 
        "label": "Get Before Rep", 
        "method": "getBeforeRep", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getCurrentMode": {
        "inputs": [
          "period", 
          "event"
        ], 
        "label": "Get Current Mode", 
        "method": "getCurrentMode", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getCurrentModeItems": {
        "inputs": [
          "period", 
          "event"
        ], 
        "label": "Get Current Mode Items", 
        "method": "getCurrentModeItems", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getEthicReport": {
        "inputs": [
          "branch", 
          "period", 
          "event", 
          "sender"
        ], 
        "label": "Get Ethic Report", 
        "method": "getEthicReport", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getEvent": {
        "inputs": [
          "branch", 
          "period", 
          "eventIndex"
        ], 
        "label": "Get Event", 
        "method": "getEvent", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getEventIndex": {
        "inputs": [
          "branch", 
          "period", 
          "event"
        ], 
        "label": "Get Event Index", 
        "method": "getEventIndex", 
        "returns": "number", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getEventWeight": {
        "inputs": [
          "branch", 
          "votePeriod", 
          "event"
        ], 
        "label": "Get Event Weight", 
        "method": "getEventWeight", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getEvents": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Get Events", 
        "method": "getEvents", 
        "returns": "int256[]", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getEventsRange": {
        "inputs": [
          "branch", 
          "period", 
          "start", 
          "end"
        ], 
        "label": "Get Events Range", 
        "method": "getEventsRange", 
        "returns": "int256[]", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getFeeValue": {
        "inputs": [
          "branch", 
          "expIndex"
        ], 
        "label": "Get Fee Value", 
        "method": "getFeeValue", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getLesserReportNum": {
        "inputs": [
          "branch", 
          "period", 
          "event"
        ], 
        "label": "Get Lesser Report Num", 
        "method": "getLesserReportNum", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getNumActiveReporters": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Get Num Active Reporters", 
        "method": "getNumActiveReporters", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getNumEventsToReportOn": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Get Num Events To Report On", 
        "method": "getNumEventsToReportOn", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getNumRemoved": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Get Num Removed", 
        "method": "getNumRemoved", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getNumReportsSubmitted": {
        "inputs": [
          "branch", 
          "votePeriod", 
          "sender"
        ], 
        "label": "Get Num Reports Submitted", 
        "method": "getNumReportsSubmitted", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getNumRequired": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Get Num Required", 
        "method": "getNumRequired", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getNumRoundTwo": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Get Num Round Two", 
        "method": "getNumRoundTwo", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getNumberEvents": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Get Number Events", 
        "method": "getNumberEvents", 
        "returns": "number", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getPeriodDormantRep": {
        "inputs": [
          "branch", 
          "period", 
          "sender"
        ], 
        "label": "Get Period Dormant Rep", 
        "method": "getPeriodDormantRep", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getPeriodRepWeight": {
        "inputs": [
          "branch", 
          "votePeriod", 
          "sender"
        ], 
        "label": "Get Period Rep Weight", 
        "method": "getPeriodRepWeight", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getReport": {
        "inputs": [
          "branch", 
          "period", 
          "event", 
          "sender"
        ], 
        "label": "Get Report", 
        "method": "getReport", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getRequired": {
        "inputs": [
          "event", 
          "period", 
          "branch"
        ], 
        "label": "Get Required", 
        "method": "getRequired", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getSubsidy": {
        "inputs": [
          "branch", 
          "period", 
          "event"
        ], 
        "label": "Get Subsidy", 
        "method": "getSubsidy", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getWeightOfReport": {
        "inputs": [
          "period", 
          "event", 
          "report"
        ], 
        "label": "Get Weight Of Report", 
        "method": "getWeightOfReport", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "moveEvent": {
        "inputs": [
          "branch", 
          "event"
        ], 
        "label": "Move Event", 
        "method": "moveEvent", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "refundCost": {
        "inputs": [
          "to", 
          "branch", 
          "period", 
          "event"
        ], 
        "label": "Refund Cost", 
        "method": "refundCost", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "removeEvent": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Remove Event", 
        "method": "removeEvent", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setAfterRep": {
        "inputs": [
          "branch", 
          "period", 
          "rep", 
          "sender"
        ], 
        "label": "Set After Rep", 
        "method": "setAfterRep", 
        "returns": "unfix", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setBeforeRep": {
        "inputs": [
          "branch", 
          "period", 
          "rep", 
          "sender"
        ], 
        "label": "Set Before Rep", 
        "method": "setBeforeRep", 
        "returns": "unfix", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "setCurrentMode": {
        "inputs": [
          "period", 
          "event", 
          "mode"
        ], 
        "label": "Set Current Mode", 
        "method": "setCurrentMode", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setCurrentModeItems": {
        "inputs": [
          "period", 
          "event", 
          "modeReport"
        ], 
        "label": "Set Current Mode Items", 
        "method": "setCurrentModeItems", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setEthicReport": {
        "inputs": [
          "branch", 
          "period", 
          "event", 
          "ethics", 
          "sender"
        ], 
        "label": "Set Ethic Report", 
        "method": "setEthicReport", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setEventRequired": {
        "inputs": [
          "branch", 
          "period", 
          "event"
        ], 
        "label": "Set Event Required", 
        "method": "setEventRequired", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setEventWeight": {
        "inputs": [
          "branch", 
          "votePeriod", 
          "event", 
          "num"
        ], 
        "label": "Set Event Weight", 
        "method": "setEventWeight", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setLesserReportNum": {
        "inputs": [
          "branch", 
          "period", 
          "event", 
          "num"
        ], 
        "label": "Set Lesser Report Num", 
        "method": "setLesserReportNum", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setNumEventsToReportOn": {
        "inputs": [
          "branch"
        ], 
        "label": "Set Num Events To Report On", 
        "method": "setNumEventsToReportOn", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "setPeriodDormantRep": {
        "inputs": [
          "branch", 
          "period", 
          "rep", 
          "sender"
        ], 
        "label": "Set Period Dormant Rep", 
        "method": "setPeriodDormantRep", 
        "returns": "unfix", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setPeriodRepWeight": {
        "inputs": [
          "branch", 
          "votePeriod", 
          "sender", 
          "value"
        ], 
        "label": "Set Period Rep Weight", 
        "method": "setPeriodRepWeight", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setReport": {
        "inputs": [
          "branch", 
          "period", 
          "event", 
          "report", 
          "sender"
        ], 
        "label": "Set Report", 
        "method": "setReport", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "ForkPenalize": {
      "penalizeOnForkedEvent": {
        "inputs": [
          "branch", 
          "event"
        ], 
        "label": "Penalize On Forked Event", 
        "method": "penalizeOnForkedEvent", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "ForkResolution": {
      "exchangeRate": {
        "inputs": [
          "branch"
        ], 
        "label": "Exchange Rate", 
        "method": "exchangeRate", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "internalResolveFork": {
        "inputs": [
          "branch"
        ], 
        "label": "Internal Resolve Fork", 
        "method": "internalResolveFork", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "publicResolveFork": {
        "inputs": [
          "branch"
        ], 
        "label": "Public Resolve Fork", 
        "method": "publicResolveFork", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "Forking": {
      "fork": {
        "inputs": [
          "event", 
          "branch", 
          "forkedOverEthicality"
        ], 
        "label": "Fork", 
        "method": "fork", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "FxpFunctions": {
      "fxExp": {
        "inputs": [
          "x"
        ], 
        "label": "Fx Exp", 
        "method": "fxExp", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "fxLog": {
        "inputs": [
          "x"
        ], 
        "label": "Fx Log", 
        "method": "fxLog", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "IncrementPeriod": {
      "internalIncrementPeriodAfterReporting": {
        "inputs": [
          "branch"
        ], 
        "label": "Internal Increment Period After Reporting", 
        "method": "internalIncrementPeriodAfterReporting", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "publicIncrementPeriodAfterReporting": {
        "inputs": [
          "branch"
        ], 
        "label": "Public Increment Period After Reporting", 
        "method": "publicIncrementPeriodAfterReporting", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "Info": {
      "getCreationFee": {
        "inputs": [
          "ID"
        ], 
        "label": "Get Creation Fee", 
        "method": "getCreationFee", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getCreator": {
        "inputs": [
          "ID"
        ], 
        "label": "Get Creator", 
        "method": "getCreator", 
        "returns": "address", 
        "signature": [
          "int256"
        ]
      }, 
      "getCurrency": {
        "inputs": [
          "ID"
        ], 
        "label": "Get Currency", 
        "method": "getCurrency", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getDescription": {
        "inputs": [
          "ID"
        ], 
        "label": "Get Description", 
        "method": "getDescription", 
        "returns": "string", 
        "signature": [
          "int256"
        ]
      }, 
      "getDescriptionLength": {
        "inputs": [
          "ID"
        ], 
        "label": "Get Description Length", 
        "method": "getDescriptionLength", 
        "returns": "int", 
        "signature": [
          "int256"
        ]
      }, 
      "getWallet": {
        "inputs": [
          "ID"
        ], 
        "label": "Get Wallet", 
        "method": "getWallet", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "setCurrencyAndWallet": {
        "inputs": [
          "ID", 
          "currency", 
          "wallet"
        ], 
        "label": "Set Currency And Wallet", 
        "method": "setCurrencyAndWallet", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setInfo": {
        "fixed": [
          3
        ], 
        "inputs": [
          "ID", 
          "description", 
          "creator", 
          "fxpFee", 
          "currency", 
          "wallet"
        ], 
        "label": "Set Info", 
        "method": "setInfo", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "bytes", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "MakeOrder": {
      "makeOrder": {
        "fixed": [
          2, 
          3
        ], 
        "inputs": [
          "sender", 
          "type", 
          "fxpAmount", 
          "fxpPrice", 
          "market", 
          "outcome", 
          "tradeGroupID"
        ], 
        "label": "Make Order", 
        "method": "makeOrder", 
        "returns": "int256", 
        "signature": [
          "address", 
          "uint256", 
          "uint256", 
          "int256", 
          "address", 
          "uint256", 
          "int256"
        ]
      }, 
      "placeAsk": {
        "fixed": [
          1, 
          2
        ], 
        "inputs": [
          "sender", 
          "fxpAmount", 
          "fxpPrice", 
          "market", 
          "outcome"
        ], 
        "label": "Place Ask", 
        "method": "placeAsk", 
        "returns": "int256[]", 
        "signature": [
          "address", 
          "uint256", 
          "int256", 
          "address", 
          "uint256"
        ]
      }, 
      "placeBid": {
        "fixed": [
          1, 
          2
        ], 
        "inputs": [
          "sender", 
          "fxpAmount", 
          "fxpPrice", 
          "market", 
          "outcome"
        ], 
        "label": "Place Bid", 
        "method": "placeBid", 
        "returns": "int256[]", 
        "signature": [
          "address", 
          "uint256", 
          "int256", 
          "address", 
          "uint256"
        ]
      }, 
      "publicMakeOrder": {
        "fixed": [
          1, 
          2
        ], 
        "inputs": [
          "type", 
          "fxpAmount", 
          "fxpPrice", 
          "market", 
          "outcome", 
          "tradeGroupID"
        ], 
        "label": "Public Make Order", 
        "method": "publicMakeOrder", 
        "returns": "int256", 
        "signature": [
          "uint256", 
          "uint256", 
          "int256", 
          "address", 
          "uint256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "MakeReports": {
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "submitReport": {
        "fixed": [
          3
        ], 
        "inputs": [
          "event", 
          "fxpReport", 
          "fxpEthics"
        ], 
        "label": "Reveal Report", 
        "method": "submitReport", 
        "mutable": true, 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "Markets": {
      "addFees": {
        "fixed": [
          1
        ], 
        "inputs": [
          "market", 
          "fxpAmount"
        ], 
        "label": "Add Fees", 
        "method": "addFees", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "addToMarketsHash": {
        "inputs": [
          "branch", 
          "newHash"
        ], 
        "label": "Add To Markets Hash", 
        "method": "addToMarketsHash", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getBondsMan": {
        "inputs": [
          "market"
        ], 
        "label": "Get Bonds Man", 
        "method": "getBondsMan", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getBranch": {
        "inputs": [
          "market"
        ], 
        "label": "Get Branch", 
        "method": "getBranch", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getCumulativeScale": {
        "inputs": [
          "market"
        ], 
        "label": "Get Cumulative Scale", 
        "method": "getCumulativeScale", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getExtraInfo": {
        "inputs": [
          "market"
        ], 
        "label": "Get Extra Info", 
        "method": "getExtraInfo", 
        "returns": "string", 
        "signature": [
          "int256"
        ]
      }, 
      "getExtraInfoLength": {
        "inputs": [
          "market"
        ], 
        "label": "Get Extra Info Length", 
        "method": "getExtraInfoLength", 
        "returns": "int", 
        "signature": [
          "int256"
        ]
      }, 
      "getFees": {
        "inputs": [
          "market"
        ], 
        "label": "Get Fees", 
        "method": "getFees", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getGasSubsidy": {
        "inputs": [
          "market"
        ], 
        "label": "Get Gas Subsidy", 
        "method": "getGasSubsidy", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getLastExpDate": {
        "inputs": [
          "market"
        ], 
        "label": "Get Last Exp Date", 
        "method": "getLastExpDate", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getMarketEvent": {
        "inputs": [
          "market"
        ], 
        "label": "Get Market Event", 
        "method": "getMarketEvent", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getMarketNumOutcomes": {
        "inputs": [
          "market"
        ], 
        "label": "Get Market Num Outcomes", 
        "method": "getMarketNumOutcomes", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getMarketResolved": {
        "inputs": [
          "market"
        ], 
        "label": "Get Market Resolved", 
        "method": "getMarketResolved", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getMarketShareContracts": {
        "inputs": [
          "market"
        ], 
        "label": "Get Market Share Contracts", 
        "method": "getMarketShareContracts", 
        "returns": "int256[]", 
        "signature": [
          "int256"
        ]
      }, 
      "getMarketsHash": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Markets Hash", 
        "method": "getMarketsHash", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getOriginalTradingPeriod": {
        "inputs": [
          "market"
        ], 
        "label": "Get Original Trading Period", 
        "method": "getOriginalTradingPeriod", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getOutcomeShareContract": {
        "inputs": [
          "market", 
          "outcome"
        ], 
        "label": "Get Outcome Share Contract", 
        "method": "getOutcomeShareContract", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getOutcomeShareWallet": {
        "inputs": [
          "market", 
          "outcome"
        ], 
        "label": "Get Outcome Share Wallet", 
        "method": "getOutcomeShareWallet", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getParticipantSharesPurchased": {
        "inputs": [
          "market", 
          "trader", 
          "outcome"
        ], 
        "label": "Get Participant Shares Purchased", 
        "method": "getParticipantSharesPurchased", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getPushedForward": {
        "inputs": [
          "market"
        ], 
        "label": "Get Pushed Forward", 
        "method": "getPushedForward", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getSharesPurchased": {
        "inputs": [
          "market", 
          "outcome"
        ], 
        "label": "Get Shares Purchased", 
        "method": "getSharesPurchased", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getSharesValue": {
        "inputs": [
          "market"
        ], 
        "label": "Get Shares Value", 
        "method": "getSharesValue", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getTags": {
        "inputs": [
          "market"
        ], 
        "label": "Get Tags", 
        "method": "getTags", 
        "returns": "int256[]", 
        "signature": [
          "int256"
        ]
      }, 
      "getTopic": {
        "inputs": [
          "market"
        ], 
        "label": "Get Topic", 
        "method": "getTopic", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getTotalSharesPurchased": {
        "inputs": [
          "market"
        ], 
        "label": "Get Total Shares Purchased", 
        "method": "getTotalSharesPurchased", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getTradingFee": {
        "inputs": [
          "market"
        ], 
        "label": "Get Trading Fee", 
        "method": "getTradingFee", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getTradingPeriod": {
        "inputs": [
          "market"
        ], 
        "label": "Get Trading Period", 
        "method": "getTradingPeriod", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "initializeMarket": {
        "fixed": [
          3, 
          8, 
          12
        ], 
        "inputs": [
          "market", 
          "event", 
          "tradingPeriod", 
          "fxpTradingFee", 
          "branch", 
          "tag1", 
          "tag2", 
          "tag3", 
          "fxpCumulativeScale", 
          "numOutcomes", 
          "extraInfo", 
          "gasSubsidy", 
          "fxpCreationFee", 
          "lastExpDate", 
          "shareContracts", 
          "shareWallets"
        ], 
        "label": "Initialize Market", 
        "method": "initializeMarket", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "bytes", 
          "int256", 
          "int256", 
          "int256", 
          "int256[]", 
          "int256[]"
        ]
      }, 
      "modifySharesValue": {
        "fixed": [
          1
        ], 
        "inputs": [
          "market", 
          "fxpAmount"
        ], 
        "label": "Modify Shares Value", 
        "method": "modifySharesValue", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "refundClosing": {
        "inputs": [
          "market", 
          "to"
        ], 
        "label": "Refund Closing", 
        "method": "refundClosing", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "setMarketResolved": {
        "inputs": [
          "market"
        ], 
        "label": "Set Market Resolved", 
        "method": "setMarketResolved", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "setPushedForward": {
        "inputs": [
          "market", 
          "bool", 
          "sender"
        ], 
        "label": "Set Pushed Forward", 
        "method": "setPushedForward", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setTradingFee": {
        "inputs": [
          "market", 
          "fee"
        ], 
        "label": "Set Trading Fee", 
        "method": "setTradingFee", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setTradingPeriod": {
        "inputs": [
          "market", 
          "period"
        ], 
        "label": "Set Trading Period", 
        "method": "setTradingPeriod", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "MoveEventAfterFork": {
      "moveEvent": {
        "inputs": [
          "event"
        ], 
        "label": "Move Event", 
        "method": "moveEvent", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "Mutex": {
      "acquire": {
        "label": "Acquire", 
        "method": "acquire", 
        "returns": "int256"
      }, 
      "release": {
        "label": "Release", 
        "method": "release", 
        "returns": "int256"
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "NonBinaryForkResolve": {
      "scalarOrCategoricalForkResolve": {
        "inputs": [
          "branch", 
          "event", 
          "bond", 
          "periodLength", 
          "votingPeriodEvent", 
          "winner"
        ], 
        "label": "Scalar Or Categorical Fork Resolve", 
        "method": "scalarOrCategoricalForkResolve", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "NonBinaryMarketResolve": {
      "resolveCategoricalOrScalar": {
        "fixed": [
          0, 
          1
        ], 
        "inputs": [
          "fxpScaledMin", 
          "fxpScaledMax", 
          "event", 
          "market", 
          "branch", 
          "votingPeriodEvent"
        ], 
        "label": "Resolve Categorical Or Scalar", 
        "method": "resolveCategoricalOrScalar", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "Orders": {
      "addOrder": {
        "inputs": [
          "market", 
          "orderID"
        ], 
        "label": "Add Order", 
        "method": "addOrder", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "cancelOrderLog": {
        "fixed": [
          2, 
          3, 
          7, 
          8
        ], 
        "inputs": [
          "market", 
          "sender", 
          "fxpPrice", 
          "fxpAmount", 
          "orderID", 
          "outcome", 
          "type", 
          "fxpMoneyEscrowed", 
          "fxpSharesEscrowed"
        ], 
        "label": "Cancel Order Log", 
        "method": "cancelOrderLog", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "checkHash": {
        "inputs": [
          "orderHash", 
          "sender"
        ], 
        "label": "Check Hash", 
        "method": "checkHash", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "commitOrder": {
        "inputs": [
          "hash"
        ], 
        "label": "Commit Order", 
        "method": "commitOrder", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "completeSetsLog": {
        "fixed": [
          3
        ], 
        "inputs": [
          "sender", 
          "market", 
          "type", 
          "fxpAmount", 
          "numOutcomes", 
          "fee"
        ], 
        "label": "Complete Sets Log", 
        "method": "completeSetsLog", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "fillOrder": {
        "inputs": [
          "orderID", 
          "fill", 
          "money", 
          "shares"
        ], 
        "label": "Fill Order", 
        "method": "fillOrder", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getAmount": {
        "inputs": [
          "id"
        ], 
        "label": "Get Amount", 
        "method": "getAmount", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getID": {
        "inputs": [
          "orderID"
        ], 
        "label": "Get ID", 
        "method": "getID", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getLastOrder": {
        "inputs": [
          "market"
        ], 
        "label": "Get Last Order", 
        "method": "getLastOrder", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getLastOutcomePrice": {
        "inputs": [
          "market", 
          "outcome"
        ], 
        "label": "Get Last Outcome Price", 
        "method": "getLastOutcomePrice", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getOrder": {
        "inputs": [
          "id"
        ], 
        "label": "Get Order", 
        "method": "getOrder", 
        "returns": "int256[]", 
        "signature": [
          "int256"
        ]
      }, 
      "getOrderIDs": {
        "inputs": [
          "marketID"
        ], 
        "label": "Get Order I Ds", 
        "method": "getOrderIDs", 
        "returns": "int256[]", 
        "signature": [
          "int256"
        ]
      }, 
      "getOrderOwner": {
        "inputs": [
          "id"
        ], 
        "label": "Get Order Owner", 
        "method": "getOrderOwner", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getPrevID": {
        "inputs": [
          "market", 
          "order"
        ], 
        "label": "Get Prev ID", 
        "method": "getPrevID", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getPrice": {
        "inputs": [
          "id"
        ], 
        "label": "Get Price", 
        "method": "getPrice", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getTotalOrders": {
        "inputs": [
          "marketID"
        ], 
        "label": "Get Total Orders", 
        "method": "getTotalOrders", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getType": {
        "inputs": [
          "id"
        ], 
        "label": "Get Type", 
        "method": "getType", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getVolume": {
        "inputs": [
          "market"
        ], 
        "label": "Get Volume", 
        "method": "getVolume", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "makeOrderHash": {
        "inputs": [
          "market", 
          "outcome", 
          "direction"
        ], 
        "label": "Make Order Hash", 
        "method": "makeOrderHash", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "modifyMarketVolume": {
        "fixed": [
          1
        ], 
        "inputs": [
          "market", 
          "fxpAmount"
        ], 
        "label": "Modify Market Volume", 
        "method": "modifyMarketVolume", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "removeOrder": {
        "inputs": [
          "id"
        ], 
        "label": "Remove Order", 
        "method": "removeOrder", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "removeOrderFromMarket": {
        "inputs": [
          "marketID", 
          "orderID"
        ], 
        "label": "Remove Order From Market", 
        "method": "removeOrderFromMarket", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "saveOrder": {
        "fixed": [
          3, 
          4, 
          7, 
          8
        ], 
        "inputs": [
          "orderID", 
          "type", 
          "market", 
          "fxpAmount", 
          "fxpPrice", 
          "sender", 
          "outcome", 
          "fxpMoneyEscrowed", 
          "fxpSharesEscrowed", 
          "tradeGroupID"
        ], 
        "label": "Save Order", 
        "method": "saveOrder", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "setPrice": {
        "fixed": [
          2
        ], 
        "inputs": [
          "market", 
          "outcome", 
          "fxpPrice"
        ], 
        "label": "Set Price", 
        "method": "setPrice", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }, 
      "takeAskOrderLog": {
        "events": [
          "TakeAskOrder"
        ], 
        "fixed": [
          3, 
          4, 
          7, 
          8, 
          9
        ], 
        "inputs": [
          "market", 
          "sender", 
          "owner", 
          "fxpPrice", 
          "fxpSumOfFills", 
          "orderID", 
          "outcome", 
          "fxpAskerSharesFilled", 
          "fxpAskerMoneyFilled", 
          "fxpBidderMoneyFilled"
        ], 
        "label": "Take Ask Order Log", 
        "method": "takeAskOrderLog", 
        "returns": "int256", 
        "signature": [
          "address", 
          "address", 
          "address", 
          "int256", 
          "uint256", 
          "address", 
          "uint256", 
          "uint256", 
          "uint256", 
          "uint256"
        ]
      }, 
      "takeBidOrderLog": {
        "events": [
          "TakeBidOrder"
        ], 
        "fixed": [
          3, 
          4, 
          7, 
          8, 
          9, 
          10
        ], 
        "inputs": [
          "market", 
          "sender", 
          "owner", 
          "fxpPrice", 
          "fxpSumOfFills", 
          "orderID", 
          "outcome", 
          "fxpAskerSharesFilled", 
          "fxpAskerMoneyFilled", 
          "fxpBidderSharesFilled", 
          "fxpBidderMoneyFilled"
        ], 
        "label": "Take Bid Order Log", 
        "method": "takeBidOrderLog", 
        "returns": "int256", 
        "signature": [
          "address", 
          "address", 
          "address", 
          "int256", 
          "uint256", 
          "address", 
          "uint256", 
          "uint256", 
          "uint256", 
          "uint256", 
          "uint256"
        ]
      }
    }, 
    "PenalizationCatchup": {
      "internalPenalizationCatchup": {
        "inputs": [
          "branch", 
          "sender"
        ], 
        "label": "Internal Penalization Catchup", 
        "method": "internalPenalizationCatchup", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "publicPenalizationCatchup": {
        "inputs": [
          "branch", 
          "sender"
        ], 
        "label": "Public Penalization Catchup", 
        "method": "publicPenalizationCatchup", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "PenalizeNotEnoughReports": {
      "proveReporterDidntReportEnough": {
        "inputs": [
          "branch", 
          "reporter", 
          "eventExample"
        ], 
        "label": "Prove Reporter Didnt Report Enough", 
        "method": "proveReporterDidntReportEnough", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "RepChangeLib": {
      "calculateRepChange": {
        "inputs": [
          "report", 
          "maxPenalty", 
          "oldRep", 
          "p", 
          "event", 
          "outcome", 
          "numReportedOn"
        ], 
        "label": "Calculate Rep Change", 
        "method": "calculateRepChange", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "Reporting": {
      "addDormantRep": {
        "fixed": [
          2
        ], 
        "inputs": [
          "branch", 
          "index", 
          "fxpValue"
        ], 
        "label": "Add Dormant Rep", 
        "method": "addDormantRep", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "addRep": {
        "fixed": [
          2
        ], 
        "inputs": [
          "branch", 
          "index", 
          "fxpValue"
        ], 
        "label": "Add Rep", 
        "method": "addRep", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "addReporter": {
        "fixed": [
          2, 
          3, 
          4
        ], 
        "inputs": [
          "branch", 
          "sender", 
          "fxpAmount", 
          "fxpDormant", 
          "fxpRepToBonderOrBranch"
        ], 
        "label": "Add Reporter", 
        "method": "addReporter", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "adjustActiveRep": {
        "fixed": [
          1
        ], 
        "inputs": [
          "branch", 
          "fxpAmount"
        ], 
        "label": "Adjust Active Rep", 
        "method": "adjustActiveRep", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "balanceOfReporter": {
        "inputs": [
          "branch", 
          "address"
        ], 
        "label": "Balance Of Reporter", 
        "method": "balanceOfReporter", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "claimInitialRepFromRepContract": {
        "label": "Claim Initial Rep From Rep Contract", 
        "method": "claimInitialRepFromRepContract", 
        "returns": "int256"
      }, 
      "getActiveRep": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Active Rep", 
        "method": "getActiveRep", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getDormantRepByIndex": {
        "inputs": [
          "branch", 
          "repIndex"
        ], 
        "label": "Get Dormant Rep By Index", 
        "method": "getDormantRepByIndex", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getNumberReporters": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Number Reporters", 
        "method": "getNumberReporters", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getRepBalance": {
        "inputs": [
          "branch", 
          "address"
        ], 
        "label": "Get Rep Balance", 
        "method": "getRepBalance", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getRepByIndex": {
        "inputs": [
          "branch", 
          "repIndex"
        ], 
        "label": "Get Rep By Index", 
        "method": "getRepByIndex", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getReportedOnNonFinalRoundTwoEvent": {
        "inputs": [
          "branch", 
          "reporter"
        ], 
        "label": "Get Reported On Non Final Round Two Event", 
        "method": "getReportedOnNonFinalRoundTwoEvent", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getReporterID": {
        "inputs": [
          "branch", 
          "index"
        ], 
        "label": "Get Reporter ID", 
        "method": "getReporterID", 
        "returns": "address", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getReputation": {
        "inputs": [
          "address"
        ], 
        "label": "Get Reputation", 
        "method": "getReputation", 
        "returns": "hash[]", 
        "signature": [
          "int256"
        ]
      }, 
      "getTotalRep": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Total Rep", 
        "method": "getTotalRep", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "repIDToIndex": {
        "inputs": [
          "branch", 
          "repID"
        ], 
        "label": "Rep ID To Index", 
        "method": "repIDToIndex", 
        "returns": "number", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "setInitialReporters": {
        "inputs": [
          "branch"
        ], 
        "label": "Set Initial Reporters", 
        "method": "setInitialReporters", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "setRep": {
        "fixed": [
          2
        ], 
        "inputs": [
          "branch", 
          "index", 
          "fxpNewRep"
        ], 
        "label": "Set Rep", 
        "method": "setRep", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setReportedOnNonFinalRoundTwoEvent": {
        "inputs": [
          "branch", 
          "event", 
          "reporter"
        ], 
        "label": "Set Reported On Non Final Round Two Event", 
        "method": "setReportedOnNonFinalRoundTwoEvent", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "subtractDormantRep": {
        "fixed": [
          2
        ], 
        "inputs": [
          "branch", 
          "index", 
          "fxpValue"
        ], 
        "label": "Subtract Dormant Rep", 
        "method": "subtractDormantRep", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "subtractRep": {
        "fixed": [
          2
        ], 
        "inputs": [
          "branch", 
          "index", 
          "fxpValue"
        ], 
        "label": "Subtract Rep", 
        "method": "subtractRep", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }, 
      "totalSupply": {
        "inputs": [
          "branch"
        ], 
        "label": "Total Supply", 
        "method": "totalSupply", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }
    }, 
    "ReportingThreshold": {
      "calculateNumberOfEventsAReporterHasToReportOnAtMinimum": {
        "inputs": [
          "branch", 
          "reporter", 
          "period"
        ], 
        "label": "Calculate Number Of Events A Reporter Has To Report On At Minimum", 
        "method": "calculateNumberOfEventsAReporterHasToReportOnAtMinimum", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "calculateReportTargetForEvent": {
        "inputs": [
          "branch", 
          "event", 
          "votePeriod", 
          "sender"
        ], 
        "label": "Calculate Report Target For Event", 
        "method": "calculateReportTargetForEvent", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "calculateReportingThreshold": {
        "inputs": [
          "branch", 
          "event", 
          "period", 
          "sender"
        ], 
        "label": "Calculate Reporting Threshold", 
        "method": "calculateReportingThreshold", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "findLazyReportersAndLeechers": {
        "inputs": [
          "branch", 
          "votePeriod", 
          "reporterStart", 
          "reporterEnd", 
          "eventStart", 
          "eventEnd"
        ], 
        "label": "Find Lazy Reporters And Leechers", 
        "method": "findLazyReportersAndLeechers", 
        "returns": "int256[]", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getEventCouldveReportedOn": {
        "inputs": [
          "branch", 
          "period", 
          "reporter", 
          "event"
        ], 
        "label": "Get Event Couldve Reported On", 
        "method": "getEventCouldveReportedOn", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getEventsToReportOn": {
        "inputs": [
          "branch", 
          "period", 
          "sender", 
          "start", 
          "end"
        ], 
        "label": "Get Events To Report On", 
        "method": "getEventsToReportOn", 
        "returns": "int256[]", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "setReportingThreshold": {
        "inputs": [
          "event"
        ], 
        "label": "Set Reporting Threshold", 
        "method": "setReportingThreshold", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "ResolveForkEvent": {
      "resolveForkEvent": {
        "inputs": [
          "branch", 
          "event"
        ], 
        "label": "Resolve Fork Event", 
        "method": "resolveForkEvent", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "resolveForkedEvent": {
        "inputs": [
          "branch", 
          "event"
        ], 
        "label": "Resolve Forked Event", 
        "method": "resolveForkedEvent", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "RoundTwo": {
      "resolve": {
        "inputs": [
          "branch", 
          "event"
        ], 
        "label": "Resolve", 
        "method": "resolve", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "roundTwoPostBond": {
        "inputs": [
          "branch", 
          "event", 
          "eventIndex", 
          "overEthicality"
        ], 
        "label": "Round Two Post Bond", 
        "method": "roundTwoPostBond", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "roundTwoResolve": {
        "inputs": [
          "branch", 
          "event", 
          "eventIndex", 
          "sender"
        ], 
        "label": "Round Two Resolve", 
        "method": "roundTwoResolve", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "RoundTwoPenalize": {
      "penalizeRoundTwoWrong": {
        "inputs": [
          "branch", 
          "event"
        ], 
        "label": "Penalize Round Two Wrong", 
        "method": "penalizeRoundTwoWrong", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "RoundTwoPenalizeLibrary": {
      "handleEthicsAndBondRepRedistribution": {
        "inputs": [
          "maxPenalty", 
          "ethics", 
          "numReportedOn", 
          "ethical", 
          "repChange", 
          "event", 
          "repBalance", 
          "newAfterRep", 
          "bond", 
          "forkEvent", 
          "branch", 
          "lastPeriodVotedOn"
        ], 
        "label": "Handle Ethics And Bond Rep Redistribution", 
        "method": "handleEthicsAndBondRepRedistribution", 
        "returns": "int256[]", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "ScalarPayouts": {
      "payoutScalarMarket": {
        "inputs": [
          "sender", 
          "market", 
          "event"
        ], 
        "label": "Payout Scalar Market", 
        "method": "payoutScalarMarket", 
        "returns": "uint256", 
        "signature": [
          "address", 
          "address", 
          "address"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "SendReputation": {
      "allowance": {
        "inputs": [
          "branch", 
          "owner", 
          "spender"
        ], 
        "label": "Allowance", 
        "method": "allowance", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "internalApprove": {
        "fixed": [
          3
        ], 
        "inputs": [
          "branch", 
          "caller", 
          "spender", 
          "fxpValue"
        ], 
        "label": "Internal Approve", 
        "method": "internalApprove", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "internalClaimRep": {
        "inputs": [
          "caller"
        ], 
        "label": "Internal Claim Rep", 
        "method": "internalClaimRep", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "internalSendRepFrom": {
        "fixed": [
          4
        ], 
        "inputs": [
          "branch", 
          "caller", 
          "from", 
          "receiver", 
          "fxpValue"
        ], 
        "label": "Internal Send Rep From", 
        "method": "internalSendRepFrom", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "internalTransferFrom": {
        "events": [
          "Transfer"
        ], 
        "fixed": [
          4
        ], 
        "inputs": [
          "branch", 
          "caller", 
          "from", 
          "receiver", 
          "fxpValue"
        ], 
        "label": "Internal Transfer From", 
        "method": "internalTransferFrom", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "publicApprove": {
        "fixed": [
          2
        ], 
        "inputs": [
          "branch", 
          "spender", 
          "fxpValue"
        ], 
        "label": "Public Approve", 
        "method": "publicApprove", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "publicClaimRep": {
        "label": "Public Claim Rep", 
        "method": "publicClaimRep", 
        "returns": "int256"
      }, 
      "publicSendRepFrom": {
        "fixed": [
          3
        ], 
        "inputs": [
          "branch", 
          "from", 
          "receiver", 
          "fxpValue"
        ], 
        "label": "Public Send Rep From", 
        "method": "publicSendRepFrom", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "publicTransferFrom": {
        "events": [
          "Transfer"
        ], 
        "fixed": [
          3
        ], 
        "inputs": [
          "branch", 
          "from", 
          "receiver", 
          "fxpValue"
        ], 
        "label": "Public Transfer From", 
        "method": "publicTransferFrom", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }
    }, 
    "ShareTokens": {
      "allowance": {
        "inputs": [
          "owner", 
          "spender"
        ], 
        "label": "Allowance", 
        "method": "allowance", 
        "returns": "unfix", 
        "signature": [
          "address", 
          "address"
        ]
      }, 
      "approve": {
        "events": [
          "Approval"
        ], 
        "inputs": [
          "spender", 
          "value"
        ], 
        "label": "Approve", 
        "method": "approve", 
        "returns": "int256", 
        "signature": [
          "address", 
          "uint256"
        ]
      }, 
      "balanceOf": {
        "inputs": [
          "address"
        ], 
        "label": "Balance Of", 
        "method": "balanceOf", 
        "returns": "unfix", 
        "signature": [
          "address"
        ]
      }, 
      "createShares": {
        "fixed": [
          1
        ], 
        "inputs": [
          "owner", 
          "fxpValue"
        ], 
        "label": "Create Shares", 
        "method": "createShares", 
        "returns": "int256", 
        "signature": [
          "address", 
          "uint256"
        ]
      }, 
      "destroyShares": {
        "fixed": [
          1
        ], 
        "inputs": [
          "owner", 
          "fxpValue"
        ], 
        "label": "Destroy Shares", 
        "method": "destroyShares", 
        "returns": "int256", 
        "signature": [
          "address", 
          "uint256"
        ]
      }, 
      "getDecimals": {
        "label": "Get Decimals", 
        "method": "getDecimals", 
        "returns": "int256"
      }, 
      "getName": {
        "label": "Get Name", 
        "method": "getName", 
        "returns": "int256"
      }, 
      "getSymbol": {
        "label": "Get Symbol", 
        "method": "getSymbol", 
        "returns": "int256"
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }, 
      "totalSupply": {
        "label": "Total Supply", 
        "method": "totalSupply", 
        "returns": "unfix"
      }, 
      "transfer": {
        "inputs": [
          "to", 
          "value"
        ], 
        "label": "Transfer", 
        "method": "transfer", 
        "returns": "int256", 
        "signature": [
          "address", 
          "uint256"
        ]
      }, 
      "transferFrom": {
        "inputs": [
          "from", 
          "to", 
          "value"
        ], 
        "label": "Transfer From", 
        "method": "transferFrom", 
        "returns": "int256", 
        "signature": [
          "address", 
          "address", 
          "uint256"
        ]
      }
    }, 
    "TakeAskOrder": {
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }, 
      "takeAskOrder": {
        "events": [
          "TakeAskOrder"
        ], 
        "fixed": [
          2
        ], 
        "inputs": [
          "sender", 
          "orderID", 
          "fxpAmountTakerWants"
        ], 
        "label": "Take Ask Order", 
        "method": "takeAskOrder", 
        "returns": "uint256", 
        "signature": [
          "address", 
          "address", 
          "uint256"
        ]
      }
    }, 
    "TakeBidOrder": {
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }, 
      "takeBidOrder": {
        "events": [
          "TakeBidOrder"
        ], 
        "fixed": [
          2
        ], 
        "inputs": [
          "sender", 
          "orderID", 
          "fxpAmountTakerWants"
        ], 
        "label": "Take Bid Order", 
        "method": "takeBidOrder", 
        "returns": "uint256", 
        "signature": [
          "address", 
          "address", 
          "uint256"
        ]
      }
    }, 
    "TakeOrder": {
      "publicTakeOrder": {
        "events": [
          "TakeAskOrder", 
          "TakeBidOrder"
        ], 
        "fixed": [
          1
        ], 
        "inputs": [
          "orderID", 
          "fxpAmountTakerWants"
        ], 
        "label": "Public Take Order", 
        "method": "publicTakeOrder", 
        "returns": "uint256", 
        "signature": [
          "address", 
          "uint256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }, 
      "takeOrder": {
        "events": [
          "TakeAskOrder", 
          "TakeBidOrder"
        ], 
        "fixed": [
          2
        ], 
        "inputs": [
          "sender", 
          "orderID", 
          "fxpAmountTakerWants"
        ], 
        "label": "Take Order", 
        "method": "takeOrder", 
        "returns": "uint256", 
        "signature": [
          "address", 
          "address", 
          "uint256"
        ]
      }
    }, 
    "Topics": {
      "getNumTopicsInBranch": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Num Topics In Branch", 
        "method": "getNumTopicsInBranch", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getTopicPopularity": {
        "inputs": [
          "branch", 
          "topic"
        ], 
        "label": "Get Topic Popularity", 
        "method": "getTopicPopularity", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getTopicsInBranch": {
        "inputs": [
          "branch", 
          "offset", 
          "numTopicsToLoad"
        ], 
        "label": "Get Topics In Branch", 
        "method": "getTopicsInBranch", 
        "returns": "int256[]", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getTopicsInfo": {
        "inputs": [
          "branch", 
          "offset", 
          "numTopicsToLoad"
        ], 
        "label": "Get Topics Info", 
        "method": "getTopicsInfo", 
        "parser": "parseTopicsInfo", 
        "returns": "int256[]", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }, 
      "updateTopicPopularity": {
        "fixed": [
          2
        ], 
        "inputs": [
          "branch", 
          "topic", 
          "fxpAmount"
        ], 
        "label": "Update Topic Popularity", 
        "method": "updateTopicPopularity", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }
    }, 
    "ValidateReport": {
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }, 
      "validateReport": {
        "fixed": [
          3
        ], 
        "inputs": [
          "event", 
          "branch", 
          "votePeriod", 
          "fxpReport", 
          "forkedOverEthicality", 
          "forkedOverThisEvent", 
          "weight"
        ], 
        "label": "Validate Report", 
        "method": "validateReport", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }
    }, 
    "Wallet": {
      "initialize": {
        "inputs": [
          "currency"
        ], 
        "label": "Initialize", 
        "method": "initialize", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "setController": {
        "inputs": [
          "newController"
        ], 
        "label": "Set Controller", 
        "method": "setController", 
        "returns": "int256", 
        "signature": [
          "address"
        ]
      }, 
      "suicideFunds": {
        "inputs": [
          "to"
        ], 
        "label": "Suicide Funds", 
        "method": "suicideFunds", 
        "signature": [
          "address"
        ]
      }, 
      "transfer": {
        "inputs": [
          "receiver", 
          "value"
        ], 
        "label": "Transfer", 
        "method": "transfer", 
        "returns": "int256", 
        "signature": [
          "address", 
          "uint256"
        ]
      }
    }
  }
}