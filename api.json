{
  "events": {
    "Approval": {
      "contract": "SendReputation", 
      "inputs": [
        {
          "indexed": true, 
          "name": "_owner", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "_spender", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "value", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "Approval(int256,int256,int256,int256)", 
      "signature": "0xb3a0644aa1a804a19f7ab4bf836f497fe9864488c91b39df7e6e6dd8f8f08b61"
    }, 
    "Transfer": {
      "contract": "SendReputation", 
      "inputs": [
        {
          "indexed": true, 
          "name": "_from", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "_to", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "_value", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "Transfer(int256,int256,int256,int256)", 
      "signature": "0xa5c50eea168b70b2f404cc28da30eade9ed5ab2beb48debd7856878bde2e6096"
    }, 
    "buyAndSellShares_logReturn": {
      "contract": "BuyAndSellShares", 
      "inputs": [
        {
          "indexed": false, 
          "name": "returnValue", 
          "type": "int256"
        }
      ], 
      "name": "buyAndSellShares_logReturn(int256)", 
      "signature": "0x9fbb0d8110bee15417200d9e638635c9436990b24f565fa2ce74f50f870171b6"
    }, 
    "closeMarket_logReturn": {
      "contract": "CloseMarket", 
      "inputs": [
        {
          "indexed": false, 
          "name": "returnValue", 
          "type": "int256"
        }
      ], 
      "name": "closeMarket_logReturn(int256)", 
      "signature": "0x7111c90bbf79fe51a8f95606c2c44137f600abeb3b5631db7d06ed168c13eea7"
    }, 
    "closedMarket": {
      "contract": "CloseMarket", 
      "inputs": [
        {
          "indexed": true, 
          "name": "market", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "branch", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }
      ], 
      "name": "closedMarket(int256,int256,int256)", 
      "signature": "0x32c2330374d337682bae09f8332c0cc2ca58d413047a81c2282ad2c3641b4d92"
    }, 
    "collectedFees": {
      "contract": "CollectFees", 
      "inputs": [
        {
          "indexed": true, 
          "name": "branch", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "cashFeesCollected", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "newCashBalance", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "repGain", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "newRepBalance", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "totalReportingRep", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "notReportingBond", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "period", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "collectedFees(int256,int256,int256,int256,int256,int256,int256,int256,int256,int256)", 
      "signature": "0xcde4a27ca173f91b1dd9076223820f857c157515fd27e19adfcd4f5f4af9ab48"
    }, 
    "completeSets_logReturn": {
      "contract": "CompleteSets", 
      "inputs": [
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "market", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "type", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "returnValue", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "numOutcomes", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "completeSets_logReturn(int256,int256,int256,int256,int256,int256)", 
      "signature": "0x59193f204bd4754cff0e765b9ee9157305fb373586ec5d680b49e6341ef922a6"
    }, 
    "consensus_logReturn": {
      "contract": "Consensus", 
      "inputs": [
        {
          "indexed": false, 
          "name": "returnValue", 
          "type": "int256"
        }
      ], 
      "name": "consensus_logReturn(int256)", 
      "signature": "0x2c8fae543971d12ce9baeaa8ac11b4873683653fdcb1a6104f6e0c9d5c3ecf02"
    }, 
    "deposit": {
      "contract": "Cash", 
      "inputs": [
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "value", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "deposit(int256,int256,int256)", 
      "signature": "0x26c0012e46d4069376ba870705277dc83bb702e2b282b4779a16fceec2479de0"
    }, 
    "fundedAccount": {
      "contract": "Faucets", 
      "inputs": [
        {
          "indexed": true, 
          "name": "branch", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "cashBalance", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "repBalance", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "fundedAccount(int256,int256,int256,int256,int256)", 
      "signature": "0xe86de3de21f900509377e1239ba6e244650b70db18f42d2cd7df914b395060b7"
    }, 
    "log_add_tx": {
      "contract": "BuyAndSellShares", 
      "inputs": [
        {
          "indexed": true, 
          "name": "market", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "type", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "price", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "amount", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "outcome", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "tradeid", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "isShortAsk", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "tradeGroupID", 
          "type": "int256"
        }
      ], 
      "name": "log_add_tx(int256,int256,int256,int256,int256,int256,int256,int256,int256,int256)", 
      "signature": "0x3922406b6c1bc74fdedc2f7b5f84f64655e6a78d29229166b493c9b738a5e40e"
    }, 
    "log_cancel": {
      "contract": "BuyAndSellShares", 
      "inputs": [
        {
          "indexed": true, 
          "name": "market", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "price", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "amount", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "tradeid", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "outcome", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "type", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "cashRefund", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "log_cancel(int256,int256,int256,int256,int256,int256,int256,int256,int256)", 
      "signature": "0x87540aa511444ce3628639499047bc199b924522a0dbfd241e849901db56c8db"
    }, 
    "log_fill_tx": {
      "contract": "Trade", 
      "inputs": [
        {
          "indexed": true, 
          "name": "market", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "owner", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "type", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "price", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "amount", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "tradeid", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "outcome", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "takerFee", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "makerFee", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "onChainPrice", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "tradeHash", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "tradeGroupID", 
          "type": "int256"
        }
      ], 
      "name": "log_fill_tx(int256,int256,int256,int256,int256,int256,int256,int256,int256,int256,int256,int256,int256,int256)", 
      "signature": "0xe054ca76966cd4f17c6c6a8e55f1c6352cb2b58b760f658e013353f1613d32c7"
    }, 
    "log_short_fill_tx": {
      "contract": "Trade", 
      "inputs": [
        {
          "indexed": true, 
          "name": "market", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "owner", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "price", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "amount", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "tradeid", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "outcome", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "takerFee", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "makerFee", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "numOutcomes", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "onChainPrice", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "tradeHash", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "tradeGroupID", 
          "type": "int256"
        }
      ], 
      "name": "log_short_fill_tx(int256,int256,int256,int256,int256,int256,int256,int256,int256,int256,int256,int256,int256,int256)", 
      "signature": "0x3572c2b345009b4c449540a9d7fe10a7464ae662d6bb1bae9fea96ce21a8ebb1"
    }, 
    "makeReports_logReturn": {
      "contract": "MakeReports", 
      "inputs": [
        {
          "indexed": false, 
          "name": "returnValue", 
          "type": "int256"
        }
      ], 
      "name": "makeReports_logReturn(int256)", 
      "signature": "0xc63250021b81c42e43223a77f306159f705fa6e54b1fbeaeeadaaa8340a38760"
    }, 
    "marketCreated": {
      "contract": "CreateMarket", 
      "inputs": [
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "branch", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "marketID", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "marketCreationFee", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "eventBond", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "marketCreated(int256,int256,int256,int256,int256,int256)", 
      "signature": "0x80dc2c0162323f3305cee66776c5a51c1475ee8c4d8c6798df60e80d8c8c907b"
    }, 
    "payout": {
      "contract": "Payout", 
      "inputs": [
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "market", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "cashPayout", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "cashBalance", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "shares", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "payout(int256,int256,int256,int256,int256,int256)", 
      "signature": "0xa2bf9dad859f137c8894b41a4e89182a27fa82c48ed42019e924af83fefc1f81"
    }, 
    "penalizationCaughtUp": {
      "contract": "PenalizationCatchup", 
      "inputs": [
        {
          "indexed": true, 
          "name": "branch", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "penalizedFrom", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "penalizedUpTo", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "repLost", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "newRepBalance", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "penalizationCaughtUp(int256,int256,int256,int256,int256,int256,int256)", 
      "signature": "0x31dc9507ffec8f6f69d9f2b7a9bd206108312323de6ba468056af9c269881ea0"
    }, 
    "penalize": {
      "contract": "Consensus", 
      "inputs": [
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "branch", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "event", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "outcome", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "oldrep", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "repchange", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "newafterrep", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "p", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "reportValue", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "penalizedUpTo", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "penalize(int256,int256,int256,int256,int256,int256,int256,int256,int256,int256,int256)", 
      "signature": "0xc06628844b88265d7d67648aa987a952cb724513c59dcf14014706b266041de7"
    }, 
    "registration": {
      "contract": "Register", 
      "inputs": [
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "registration(int256,int256)", 
      "signature": "0x44b6aeb7b38bb1ad04b4d0daf588cff086ff8829f0a34c30ddbb4d38695428de"
    }, 
    "sentCash": {
      "contract": "Cash", 
      "inputs": [
        {
          "indexed": true, 
          "name": "_from", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "_to", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "_value", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "sentCash(int256,int256,int256,int256)", 
      "signature": "0x27fc4539f0a547270e2eb3d44c9889a9dd0d9fe116324eb14204ad6d54d6e047"
    }, 
    "submittedReport": {
      "contract": "MakeReports", 
      "inputs": [
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "branch", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "event", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "salt", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "report", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "ethics", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "submittedReport(int256,int256,int256,int256,int256,int256,int256)", 
      "signature": "0x10a25c8f0d1e8e37576b43df8517b7a01ba412360118206afdc4bf19fe8a61ad"
    }, 
    "submittedReportHash": {
      "contract": "MakeReports", 
      "inputs": [
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "branch", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "event", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "reportHash", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "encryptedReport", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "encryptedSalt", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "ethics", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "submittedReportHash(int256,int256,int256,int256,int256,int256,int256,int256)", 
      "signature": "0x022363830a2ffb8853db587ab6c8995dc8cb6bb401abc22fa484d705c81881c6"
    }, 
    "trade_logArrayReturn": {
      "contract": "Trade", 
      "inputs": [
        {
          "indexed": false, 
          "name": "returnArray", 
          "type": "int256[]"
        }
      ], 
      "name": "trade_logArrayReturn(int256[])", 
      "signature": "0x6a5b12f51adb25f3461c7108a9f5f8c509d374df9530d7dac8dfdd310929e39d"
    }, 
    "trade_logReturn": {
      "contract": "Trade", 
      "inputs": [
        {
          "indexed": false, 
          "name": "returnValue", 
          "type": "int256"
        }
      ], 
      "name": "trade_logReturn(int256)", 
      "signature": "0x1bbf36d9a7b2814880015722ce46ca5df561edceee37844559cf4dd31ecd5dfa"
    }, 
    "tradingFeeUpdated": {
      "contract": "CreateMarket", 
      "inputs": [
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "branch", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "marketID", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "tradingFee", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "tradingFeeUpdated(int256,int256,int256,int256,int256)", 
      "signature": "0xcd5a359787987cf4975171bed45d96e380d985598c913dc5a76c6aca1d1fccfb"
    }, 
    "withdraw": {
      "contract": "Cash", 
      "inputs": [
        {
          "indexed": true, 
          "name": "sender", 
          "type": "int256"
        }, 
        {
          "indexed": true, 
          "name": "to", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "value", 
          "type": "int256"
        }, 
        {
          "indexed": false, 
          "name": "timestamp", 
          "type": "int256"
        }
      ], 
      "name": "withdraw(int256,int256,int256,int256)", 
      "signature": "0xca93904ea92cb171dc196571984cacdf47206dfcde44e464b394de4cca42f7b7"
    }
  }, 
  "functions": {
    "Backstops": {
      "adjForkBondPaid": {
        "inputs": [
          "event", 
          "amount"
        ], 
        "label": "Adj Fork Bond Paid", 
        "method": "adjForkBondPaid", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "doRoundTwoRefund": {
        "inputs": [
          "sender", 
          "event"
        ], 
        "label": "Do Round Two Refund", 
        "method": "doRoundTwoRefund", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getBondAmount": {
        "inputs": [
          "event"
        ], 
        "label": "Get Bond Amount", 
        "method": "getBondAmount", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getBondPaid": {
        "inputs": [
          "event"
        ], 
        "label": "Get Bond Paid", 
        "method": "getBondPaid", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getBondPoster": {
        "inputs": [
          "event"
        ], 
        "label": "Get Bond Poster", 
        "method": "getBondPoster", 
        "returns": "address", 
        "signature": [
          "int256"
        ]
      }, 
      "getBondReturned": {
        "inputs": [
          "event"
        ], 
        "label": "Get Bond Returned", 
        "method": "getBondReturned", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getFinal": {
        "inputs": [
          "event"
        ], 
        "label": "Get Final", 
        "method": "getFinal", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getForkBondPaid": {
        "inputs": [
          "event"
        ], 
        "label": "Get Fork Bond Paid", 
        "method": "getForkBondPaid", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getForkBondPoster": {
        "inputs": [
          "event"
        ], 
        "label": "Get Fork Bond Poster", 
        "method": "getForkBondPoster", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getForkedOverEthicality": {
        "inputs": [
          "event"
        ], 
        "label": "Get Forked Over Ethicality", 
        "method": "getForkedOverEthicality", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getMoved": {
        "inputs": [
          "event"
        ], 
        "label": "Get Moved", 
        "method": "getMoved", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getOriginalBranch": {
        "inputs": [
          "event"
        ], 
        "label": "Get Original Branch", 
        "method": "getOriginalBranch", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getOriginalEthicality": {
        "inputs": [
          "event"
        ], 
        "label": "Get Original Ethicality", 
        "method": "getOriginalEthicality", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getOriginalOutcome": {
        "inputs": [
          "event"
        ], 
        "label": "Get Original Outcome", 
        "method": "getOriginalOutcome", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getOriginalVotePeriod": {
        "inputs": [
          "event"
        ], 
        "label": "Get Original Vote Period", 
        "method": "getOriginalVotePeriod", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getResolved": {
        "inputs": [
          "branch", 
          "forkPeriod"
        ], 
        "label": "Get Resolved", 
        "method": "getResolved", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getRoundTwo": {
        "inputs": [
          "event"
        ], 
        "label": "Get Round Two", 
        "method": "getRoundTwo", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "increaseBondPaid": {
        "inputs": [
          "event", 
          "amount"
        ], 
        "label": "Increase Bond Paid", 
        "method": "increaseBondPaid", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setBondAmount": {
        "inputs": [
          "event", 
          "amount"
        ], 
        "label": "Set Bond Amount", 
        "method": "setBondAmount", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setBondPoster": {
        "inputs": [
          "event", 
          "bondPoster"
        ], 
        "label": "Set Bond Poster", 
        "method": "setBondPoster", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setBondReturned": {
        "inputs": [
          "event"
        ], 
        "label": "Set Bond Returned", 
        "method": "setBondReturned", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "setFinal": {
        "inputs": [
          "event"
        ], 
        "label": "Set Final", 
        "method": "setFinal", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "setForkBondPoster": {
        "inputs": [
          "event", 
          "poster"
        ], 
        "label": "Set Fork Bond Poster", 
        "method": "setForkBondPoster", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setForkedOverEthicality": {
        "inputs": [
          "event"
        ], 
        "label": "Set Forked Over Ethicality", 
        "method": "setForkedOverEthicality", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "setMoved": {
        "inputs": [
          "event"
        ], 
        "label": "Set Moved", 
        "method": "setMoved", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "setOriginalBranch": {
        "inputs": [
          "event", 
          "branch"
        ], 
        "label": "Set Original Branch", 
        "method": "setOriginalBranch", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setOriginalEthicality": {
        "inputs": [
          "event", 
          "ethicality"
        ], 
        "label": "Set Original Ethicality", 
        "method": "setOriginalEthicality", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setOriginalOutcome": {
        "inputs": [
          "event", 
          "originalOutcome"
        ], 
        "label": "Set Original Outcome", 
        "method": "setOriginalOutcome", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setOriginalVotePeriod": {
        "inputs": [
          "event", 
          "period"
        ], 
        "label": "Set Original Vote Period", 
        "method": "setOriginalVotePeriod", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setResolved": {
        "inputs": [
          "branch", 
          "forkPeriod", 
          "winner"
        ], 
        "label": "Set Resolved", 
        "method": "setResolved", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setRoundTwo": {
        "inputs": [
          "event", 
          "roundTwo"
        ], 
        "label": "Set Round Two", 
        "method": "setRoundTwo", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setRoundTwoRefund": {
        "inputs": [
          "event", 
          "amt"
        ], 
        "label": "Set Round Two Refund", 
        "method": "setRoundTwoRefund", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }
    }, 
    "Branches": {
      "addMarketToBranch": {
        "inputs": [
          "branch", 
          "market"
        ], 
        "label": "Add Market To Branch", 
        "method": "addMarketToBranch", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getBaseReporters": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Base Reporters", 
        "method": "getBaseReporters", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getBranchByNum": {
        "inputs": [
          "branchNumber"
        ], 
        "label": "Get Branch By Num", 
        "method": "getBranchByNum", 
        "returns": "hash", 
        "signature": [
          "int256"
        ]
      }, 
      "getBranches": {
        "label": "Get Branches", 
        "method": "getBranches", 
        "returns": "hash[]"
      }, 
      "getCreationDate": {
        "inputs": [
          "ID"
        ], 
        "label": "Get Creation Date", 
        "method": "getCreationDate", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getEventForkedOver": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Event Forked Over", 
        "method": "getEventForkedOver", 
        "parser": "parseMarket", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getForkPeriod": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Fork Period", 
        "method": "getForkPeriod", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getInitialBalance": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Get Initial Balance", 
        "method": "getInitialBalance", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getMarketsInBranch": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Markets In Branch", 
        "method": "getMarketsInBranch", 
        "parser": "parseMarkets", 
        "returns": "hash[]", 
        "signature": [
          "int256"
        ]
      }, 
      "getMinTradingFee": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Min Trading Fee", 
        "method": "getMinTradingFee", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getNumBranches": {
        "label": "Get Num Branches", 
        "method": "getNumBranches", 
        "returns": "number"
      }, 
      "getNumMarketsBranch": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Num Markets Branch", 
        "method": "getNumMarketsBranch", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getOracleOnly": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Oracle Only", 
        "method": "getOracleOnly", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getParent": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Parent", 
        "method": "getParent", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getParentPeriod": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Parent Period", 
        "method": "getParentPeriod", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getPeriodLength": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Period Length", 
        "method": "getPeriodLength", 
        "returns": "int", 
        "signature": [
          "int256"
        ]
      }, 
      "getSomeMarketsInBranch": {
        "inputs": [
          "branch", 
          "initial", 
          "last"
        ], 
        "label": "Get Some Markets In Branch", 
        "method": "getSomeMarketsInBranch", 
        "returns": "int256[]", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getVotePeriod": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Vote Period", 
        "method": "getVotePeriod", 
        "returns": "int", 
        "signature": [
          "int256"
        ]
      }, 
      "incrementPeriod": {
        "inputs": [
          "branch"
        ], 
        "label": "Increment Period", 
        "method": "incrementPeriod", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "initDefaultBranch": {
        "label": "Init Default Branch", 
        "method": "initDefaultBranch", 
        "returns": "number", 
        "send": true
      }, 
      "initializeBranch": {
        "inputs": [
          "ID", 
          "currentVotePeriod", 
          "periodLength", 
          "minTradingFee", 
          "oracleOnly", 
          "parentPeriod", 
          "parent"
        ], 
        "label": "Initialize Branch", 
        "method": "initializeBranch", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setBaseReporters": {
        "inputs": [
          "branch", 
          "num"
        ], 
        "label": "Set Base Reporters", 
        "method": "setBaseReporters", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setEventForkedOver": {
        "inputs": [
          "branch", 
          "event"
        ], 
        "label": "Set Event Forked Over", 
        "method": "setEventForkedOver", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setForkPeriod": {
        "inputs": [
          "branch"
        ], 
        "label": "Set Fork Period", 
        "method": "setForkPeriod", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "setInitialBalance": {
        "inputs": [
          "branch", 
          "period", 
          "balance"
        ], 
        "label": "Set Initial Balance", 
        "method": "setInitialBalance", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }
    }, 
    "BuyAndSellShares": {
      "buy": {
        "events": [
          "log_add_tx", 
          "sentCash"
        ], 
        "gas": 725202, 
        "inputs": [
          "amount", 
          "price", 
          "market", 
          "outcome", 
          "minimumTradeSize", 
          "tradeGroupID"
        ], 
        "label": "Bid", 
        "method": "buy", 
        "mutable": true, 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "cancel": {
        "events": [
          "log_cancel"
        ], 
        "gas": 288060, 
        "inputs": [
          "trade_id"
        ], 
        "label": "Cancel", 
        "method": "cancel", 
        "mutable": true, 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "sell": {
        "events": [
          "log_add_tx", 
          "sentCash"
        ], 
        "gas": 696759, 
        "inputs": [
          "amount", 
          "price", 
          "market", 
          "outcome", 
          "minimumTradeSize", 
          "isShortAsk", 
          "tradeGroupID"
        ], 
        "label": "Ask", 
        "method": "sell", 
        "mutable": true, 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "shortAsk": {
        "events": [
          "completeSets_logReturn", 
          "sentCash", 
          "log_add_tx"
        ], 
        "gas": 1500000, 
        "inputs": [
          "amount", 
          "price", 
          "market", 
          "outcome", 
          "minimumTradeSize", 
          "tradeGroupID"
        ], 
        "label": "Short Ask", 
        "method": "shortAsk", 
        "mutable": true, 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }
    }, 
    "Cash": {
      "addCash": {
        "fixed": [
          1
        ], 
        "inputs": [
          "ID", 
          "amount"
        ], 
        "label": "Add Cash", 
        "method": "addCash", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "balance": {
        "inputs": [
          "address"
        ], 
        "label": "Balance", 
        "method": "balance", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "depositEther": {
        "description": "Convert Ether to tradeable Ether token", 
        "events": [
          "deposit"
        ], 
        "label": "Deposit Ether", 
        "method": "depositEther", 
        "returns": "number", 
        "send": true
      }, 
      "initiateOwner": {
        "inputs": [
          "account"
        ], 
        "label": "Initiate Owner", 
        "method": "initiateOwner", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "send": {
        "events": [
          "sentCash"
        ], 
        "fixed": [
          1
        ], 
        "inputs": [
          "recver", 
          "value"
        ], 
        "label": "Send Tokens", 
        "method": "send", 
        "returns": "unfix", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "sendFrom": {
        "events": [
          "sentCash"
        ], 
        "fixed": [
          1
        ], 
        "inputs": [
          "recver", 
          "value", 
          "from", 
          "doNotLog"
        ], 
        "label": "Send Tokens", 
        "method": "sendFrom", 
        "returns": "unfix", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setCash": {
        "fixed": [
          1
        ], 
        "inputs": [
          "address", 
          "balance"
        ], 
        "label": "Set Cash", 
        "method": "setCash", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "subtractCash": {
        "inputs": [
          "ID", 
          "amount"
        ], 
        "label": "Subtract Cash", 
        "method": "subtractCash", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "withdrawEther": {
        "description": "Convert tradeable Ether token to Ether", 
        "events": [
          "withdraw"
        ], 
        "fixed": [
          1
        ], 
        "inputs": [
          "to", 
          "value"
        ], 
        "label": "Withdraw Ether", 
        "method": "withdrawEther", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }
    }, 
    "CloseMarket": {
      "claimProceeds": {
        "events": [
          "payout"
        ], 
        "inputs": [
          "branch", 
          "market"
        ], 
        "label": "Claim Trading Payout", 
        "method": "claimProceeds", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "closeMarket": {
        "events": [
          "closedMarket"
        ], 
        "inputs": [
          "branch", 
          "market", 
          "sender"
        ], 
        "label": "Close Market", 
        "method": "closeMarket", 
        "mutable": true, 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }
    }, 
    "CollectFees": {
      "collectFees": {
        "events": [
          "collectedFees"
        ], 
        "inputs": [
          "branch", 
          "sender"
        ], 
        "label": "Reporting Payment", 
        "method": "collectFees", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }
    }, 
    "CompleteSets": {
      "buyCompleteSets": {
        "events": [
          "completeSets_logReturn", 
          "sentCash"
        ], 
        "fixed": [
          1
        ], 
        "gas": 698875, 
        "inputs": [
          "market", 
          "amount"
        ], 
        "label": "Buy Complete Sets", 
        "method": "buyCompleteSets", 
        "mutable": true, 
        "returns": "hash[]", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "sellCompleteSets": {
        "events": [
          "completeSets_logReturn"
        ], 
        "fixed": [
          1
        ], 
        "gas": 535220, 
        "inputs": [
          "market", 
          "amount"
        ], 
        "label": "Sell Complete Sets", 
        "method": "sellCompleteSets", 
        "mutable": true, 
        "returns": "hash[]", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }
    }, 
    "CompositeGetters": {
      "batchGetMarketInfo": {
        "inputs": [
          "marketIDs", 
          "account"
        ], 
        "label": "Batch Get Market Info", 
        "method": "batchGetMarketInfo", 
        "returns": "hash[]", 
        "signature": [
          "int256[]", 
          "int256"
        ]
      }, 
      "getAccountOrderBook": {
        "inputs": [
          "marketID", 
          "account"
        ], 
        "label": "Get Account Order Book", 
        "method": "getAccountOrderBook", 
        "returns": "int256[]", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getEventsWithSubmittedReport": {
        "inputs": [
          "branch", 
          "period", 
          "reporter"
        ], 
        "label": "Get Events With Submitted Report", 
        "method": "getEventsWithSubmittedReport", 
        "parser": "parseMarkets", 
        "returns": "int256[]", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getMarketCreatorFeesCollected": {
        "inputs": [
          "market"
        ], 
        "label": "Get Market Creator Fees Collected", 
        "method": "getMarketCreatorFeesCollected", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getMarketInfo": {
        "inputs": [
          "marketID", 
          "account"
        ], 
        "label": "Get Market Info", 
        "method": "getMarketInfo", 
        "parser": "validateMarketInfo", 
        "returns": "hash[]", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getMarketsCreatedByMarketCreator": {
        "inputs": [
          "branch", 
          "creator", 
          "initial", 
          "last"
        ], 
        "label": "Get Markets Created By Market Creator", 
        "method": "getMarketsCreatedByMarketCreator", 
        "parser": "parseMarkets", 
        "returns": "int256[]", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getMarketsInfo": {
        "inputs": [
          "branch", 
          "offset", 
          "numMarketsToLoad", 
          "volumeMin", 
          "volumeMax"
        ], 
        "label": "Get Markets Info", 
        "method": "getMarketsInfo", 
        "returns": "hash[]", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getOrderBook": {
        "inputs": [
          "marketID", 
          "offset", 
          "numTradesToLoad"
        ], 
        "label": "Get Order Book", 
        "method": "getOrderBook", 
        "parser": "parseOrderBook", 
        "returns": "hash[]", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getPositionInMarket": {
        "inputs": [
          "market", 
          "account"
        ], 
        "label": "Get Position In Market", 
        "method": "getPositionInMarket", 
        "parser": "parsePositionInMarket", 
        "returns": "int256[]", 
        "signature": [
          "int256", 
          "int256"
        ]
      }
    }, 
    "Consensus": {
      "incrementPeriodAfterReporting": {
        "description": "Advance to the next Reporting cycle", 
        "inputs": [
          "branch"
        ], 
        "label": "Next Reporting Cycle", 
        "method": "incrementPeriodAfterReporting", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "penalizeWrong": {
        "events": [
          "penalize", 
          "closedMarket"
        ], 
        "inputs": [
          "branch", 
          "event"
        ], 
        "label": "Compare Report To Consensus", 
        "method": "penalizeWrong", 
        "mutable": true, 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }
    }, 
    "ConsensusData": {
      "doRefund": {
        "inputs": [
          "sender", 
          "refunder"
        ], 
        "label": "Do Refund", 
        "method": "doRefund", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getBaseReportersLastPeriod": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Base Reporters Last Period", 
        "method": "getBaseReportersLastPeriod", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getDenominator": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Get Denominator", 
        "method": "getDenominator", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getFeeFirst": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Get Fee First", 
        "method": "getFeeFirst", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getFeesCollected": {
        "inputs": [
          "branch", 
          "address", 
          "period"
        ], 
        "label": "Get Fees Collected", 
        "method": "getFeesCollected", 
        "returns": "number", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getNotEnoughPenalized": {
        "inputs": [
          "branch", 
          "address", 
          "period"
        ], 
        "label": "Get Not Enough Penalized", 
        "method": "getNotEnoughPenalized", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getPenalized": {
        "inputs": [
          "branch", 
          "period", 
          "sender", 
          "event"
        ], 
        "label": "Get Penalized", 
        "method": "getPenalized", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getPenalizedNum": {
        "inputs": [
          "branch", 
          "period", 
          "sender"
        ], 
        "label": "Get Penalized Num", 
        "method": "getPenalizedNum", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getPenalizedUpTo": {
        "inputs": [
          "branch", 
          "sender"
        ], 
        "label": "Get Penalized Up To", 
        "method": "getPenalizedUpTo", 
        "returns": "int", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getPeriodBalance": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Get Period Balance", 
        "method": "getPeriodBalance", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getRepRedistributionDone": {
        "inputs": [
          "branch", 
          "reporter"
        ], 
        "label": "Get Rep Redistribution Done", 
        "method": "getRepRedistributionDone", 
        "returns": "number", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getSlashed": {
        "inputs": [
          "branch", 
          "votePeriod", 
          "reporter"
        ], 
        "label": "Get Slashed", 
        "method": "getSlashed", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "increaseDenominator": {
        "inputs": [
          "branch", 
          "period", 
          "amount"
        ], 
        "label": "Increase Denominator", 
        "method": "increaseDenominator", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "increasePenalizedNum": {
        "inputs": [
          "branch", 
          "period", 
          "sender", 
          "amount"
        ], 
        "label": "Increase Penalized Num", 
        "method": "increasePenalizedNum", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setBaseReportersLastPeriod": {
        "inputs": [
          "branch", 
          "amount"
        ], 
        "label": "Set Base Reporters Last Period", 
        "method": "setBaseReportersLastPeriod", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setFeeFirst": {
        "inputs": [
          "branch", 
          "period", 
          "val"
        ], 
        "label": "Set Fee First", 
        "method": "setFeeFirst", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setFeesCollected": {
        "inputs": [
          "branch", 
          "address", 
          "period"
        ], 
        "label": "Set Fees Collected", 
        "method": "setFeesCollected", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setNotEnoughPenalized": {
        "inputs": [
          "branch", 
          "address", 
          "period"
        ], 
        "label": "Set Not Enough Penalized", 
        "method": "setNotEnoughPenalized", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setPenalized": {
        "inputs": [
          "branch", 
          "period", 
          "sender", 
          "event"
        ], 
        "label": "Set Penalized", 
        "method": "setPenalized", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setPenalizedUpTo": {
        "inputs": [
          "branch", 
          "sender", 
          "period"
        ], 
        "label": "Set Penalized Up To", 
        "method": "setPenalizedUpTo", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setPeriodBalance": {
        "inputs": [
          "branch", 
          "period", 
          "balance"
        ], 
        "label": "Set Period Balance", 
        "method": "setPeriodBalance", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setRefund": {
        "inputs": [
          "refunder", 
          "amt"
        ], 
        "label": "Set Refund", 
        "method": "setRefund", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setSlashed": {
        "inputs": [
          "branch", 
          "votePeriod", 
          "reporter"
        ], 
        "label": "Set Slashed", 
        "method": "setSlashed", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }
    }, 
    "CreateBranch": {
      "createSubbranch": {
        "events": [
          "sentCash"
        ], 
        "inputs": [
          "description", 
          "periodLength", 
          "parent", 
          "minTradingFee", 
          "oracleOnly"
        ], 
        "label": "Fork Reputation", 
        "method": "createSubbranch", 
        "returns": "hash", 
        "send": true, 
        "signature": [
          "bytes", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }
    }, 
    "CreateMarket": {
      "createEvent": {
        "inputs": [
          "branch", 
          "description", 
          "expDate", 
          "minValue", 
          "maxValue", 
          "numOutcomes", 
          "resolution"
        ], 
        "label": "Create Event", 
        "method": "createEvent", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "bytes", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "bytes"
        ]
      }, 
      "createMarket": {
        "events": [
          "sentCash", 
          "marketCreated"
        ], 
        "inputs": [
          "branch", 
          "description", 
          "tradingFee", 
          "event", 
          "tag1", 
          "tag2", 
          "tag3", 
          "makerFees", 
          "extraInfo"
        ], 
        "label": "Create Market", 
        "method": "createMarket", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "bytes", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "bytes"
        ]
      }, 
      "createSingleEventMarket": {
        "events": [
          "sentCash", 
          "marketCreated"
        ], 
        "inputs": [
          "branch", 
          "description", 
          "expDate", 
          "minValue", 
          "maxValue", 
          "numOutcomes", 
          "resolution", 
          "tradingFee", 
          "tag1", 
          "tag2", 
          "tag3", 
          "makerFees", 
          "extraInfo"
        ], 
        "label": "Create Market", 
        "method": "createSingleEventMarket", 
        "returns": "hash", 
        "send": true, 
        "signature": [
          "int256", 
          "bytes", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "bytes", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "bytes"
        ]
      }, 
      "pushMarketForward": {
        "events": [
          "sentCash"
        ], 
        "inputs": [
          "branch", 
          "market"
        ], 
        "label": "Push Market Forward", 
        "method": "pushMarketForward", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "updateTradingFee": {
        "events": [
          "tradingFeeUpdated", 
          "sentCash"
        ], 
        "inputs": [
          "branch", 
          "market", 
          "tradingFee", 
          "makerFees"
        ], 
        "label": "Update Trading Fee", 
        "method": "updateTradingFee", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }
    }, 
    "EventResolution": {
      "determineWinningOutcomes": {
        "inputs": [
          "event"
        ], 
        "label": "Determine Winning Outcomes", 
        "method": "determineWinningOutcomes", 
        "returns": "int256[]", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "resolveBinary": {
        "inputs": [
          "event", 
          "market", 
          "branch", 
          "votingPeriodEvent"
        ], 
        "label": "Resolve Binary", 
        "method": "resolveBinary", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "resolveCategoricalOrScalar": {
        "inputs": [
          "scaled_min", 
          "scaled_max", 
          "event", 
          "market", 
          "branch", 
          "votingPeriodEvent"
        ], 
        "label": "Resolve Categorical Or Scalar", 
        "method": "resolveCategoricalOrScalar", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }
    }, 
    "Events": {
      "addMarket": {
        "inputs": [
          "event", 
          "marketID"
        ], 
        "label": "Add Market", 
        "method": "addMarket", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "addPast24": {
        "inputs": [
          "period"
        ], 
        "label": "Add Past24", 
        "method": "addPast24", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "getBond": {
        "inputs": [
          "event"
        ], 
        "label": "Get Bond", 
        "method": "getBond", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getBranch": {
        "inputs": [
          "event"
        ], 
        "label": "Get Branch", 
        "method": "getBranch", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getEthical": {
        "inputs": [
          "event"
        ], 
        "label": "Get Ethical", 
        "method": "getEthical", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getEthics": {
        "inputs": [
          "event"
        ], 
        "label": "Get Ethics", 
        "method": "getEthics", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getEventBranch": {
        "inputs": [
          "event"
        ], 
        "label": "Get Event Branch", 
        "method": "getEventBranch", 
        "returns": "hash", 
        "signature": [
          "int256"
        ]
      }, 
      "getEventInfo": {
        "inputs": [
          "event"
        ], 
        "label": "Get Event Info", 
        "method": "getEventInfo", 
        "parser": "parseEventInfo", 
        "returns": "hash[]", 
        "signature": [
          "int256"
        ]
      }, 
      "getEventPushedUp": {
        "inputs": [
          "event"
        ], 
        "label": "Get Event Pushed Up", 
        "method": "getEventPushedUp", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getExpiration": {
        "inputs": [
          "event"
        ], 
        "label": "Get Expiration", 
        "method": "getExpiration", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getForkEthicality": {
        "inputs": [
          "event"
        ], 
        "label": "Get Fork Ethicality", 
        "method": "getForkEthicality", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getForkOutcome": {
        "inputs": [
          "event"
        ], 
        "label": "Get Fork Outcome", 
        "method": "getForkOutcome", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getForked": {
        "inputs": [
          "event"
        ], 
        "label": "Get Forked", 
        "method": "getForked", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getForkedDone": {
        "inputs": [
          "event"
        ], 
        "label": "Get Forked Done", 
        "method": "getForkedDone", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getMarket": {
        "inputs": [
          "event", 
          "marketIndex"
        ], 
        "label": "Get Market", 
        "method": "getMarket", 
        "parser": "parseMarket", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getMarkets": {
        "inputs": [
          "event"
        ], 
        "label": "Get Markets", 
        "method": "getMarkets", 
        "parser": "parseMarkets", 
        "returns": "hash[]", 
        "signature": [
          "int256"
        ]
      }, 
      "getMaxValue": {
        "inputs": [
          "event"
        ], 
        "label": "Get Max Value", 
        "method": "getMaxValue", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getMinValue": {
        "inputs": [
          "event"
        ], 
        "label": "Get Min Value", 
        "method": "getMinValue", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getNumMarkets": {
        "inputs": [
          "event"
        ], 
        "label": "Get Num Markets", 
        "method": "getNumMarkets", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getNumOutcomes": {
        "inputs": [
          "event"
        ], 
        "label": "Get Num Outcomes", 
        "method": "getNumOutcomes", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getOriginalExpiration": {
        "inputs": [
          "event"
        ], 
        "label": "Get Original Expiration", 
        "method": "getOriginalExpiration", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getOutcome": {
        "inputs": [
          "event"
        ], 
        "label": "Get Outcome", 
        "method": "getOutcome", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getPast24": {
        "inputs": [
          "period"
        ], 
        "label": "Get Past24", 
        "method": "getPast24", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getRejected": {
        "inputs": [
          "event"
        ], 
        "label": "Get Rejected", 
        "method": "getRejected", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getRejectedPeriod": {
        "inputs": [
          "event"
        ], 
        "label": "Get Rejected Period", 
        "method": "getRejectedPeriod", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getReportingThreshold": {
        "inputs": [
          "event"
        ], 
        "label": "Get Reporting Threshold", 
        "method": "getReportingThreshold", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getResolution": {
        "inputs": [
          "event"
        ], 
        "label": "Get Resolution", 
        "method": "getResolution", 
        "returns": "string", 
        "signature": [
          "int256"
        ]
      }, 
      "getResolutionLength": {
        "inputs": [
          "event"
        ], 
        "label": "Get Resolution Length", 
        "method": "getResolutionLength", 
        "returns": "int", 
        "signature": [
          "int256"
        ]
      }, 
      "getUncaughtOutcome": {
        "inputs": [
          "event"
        ], 
        "label": "Get Uncaught Outcome", 
        "method": "getUncaughtOutcome", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getmode": {
        "inputs": [
          "event"
        ], 
        "label": "Getmode", 
        "method": "getmode", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "initializeEvent": {
        "inputs": [
          "ID", 
          "branch", 
          "expirationDate", 
          "minValue", 
          "maxValue", 
          "numOutcomes", 
          "resolution"
        ], 
        "label": "Initialize Event", 
        "method": "initializeEvent", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "bytes"
        ]
      }, 
      "setBond": {
        "inputs": [
          "event", 
          "bond"
        ], 
        "label": "Set Bond", 
        "method": "setBond", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setBranch": {
        "inputs": [
          "event", 
          "branch"
        ], 
        "label": "Set Branch", 
        "method": "setBranch", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setEthics": {
        "inputs": [
          "event", 
          "ethicality"
        ], 
        "label": "Set Ethics", 
        "method": "setEthics", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setEventPushedUp": {
        "inputs": [
          "event", 
          "val"
        ], 
        "label": "Set Event Pushed Up", 
        "method": "setEventPushedUp", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setExpiration": {
        "inputs": [
          "event", 
          "date"
        ], 
        "label": "Set Expiration", 
        "method": "setExpiration", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setForkDone": {
        "inputs": [
          "event"
        ], 
        "label": "Set Fork Done", 
        "method": "setForkDone", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "setForkEthicality": {
        "inputs": [
          "event", 
          "value"
        ], 
        "label": "Set Fork Ethicality", 
        "method": "setForkEthicality", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setForkOutcome": {
        "inputs": [
          "event", 
          "value"
        ], 
        "label": "Set Fork Outcome", 
        "method": "setForkOutcome", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setForked": {
        "inputs": [
          "event"
        ], 
        "label": "Set Forked", 
        "method": "setForked", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "setOriginalExpiration": {
        "inputs": [
          "event", 
          "date"
        ], 
        "label": "Set Original Expiration", 
        "method": "setOriginalExpiration", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setOutcome": {
        "inputs": [
          "ID", 
          "outcome"
        ], 
        "label": "Set Outcome", 
        "method": "setOutcome", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setRejected": {
        "inputs": [
          "event", 
          "period"
        ], 
        "label": "Set Rejected", 
        "method": "setRejected", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setThreshold": {
        "inputs": [
          "event", 
          "threshold"
        ], 
        "label": "Set Threshold", 
        "method": "setThreshold", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setUncaughtOutcome": {
        "inputs": [
          "event", 
          "outcome"
        ], 
        "label": "Set Uncaught Outcome", 
        "method": "setUncaughtOutcome", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setmode": {
        "inputs": [
          "event", 
          "mode"
        ], 
        "label": "Setmode", 
        "method": "setmode", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }
    }, 
    "ExpiringEvents": {
      "addEvent": {
        "inputs": [
          "branch", 
          "futurePeriod", 
          "eventID", 
          "subsidy"
        ], 
        "label": "Add Event", 
        "method": "addEvent", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "addRepEvent": {
        "inputs": [
          "branch", 
          "votePeriod", 
          "event", 
          "amount"
        ], 
        "label": "Add Rep Event", 
        "method": "addRepEvent", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "addReportToEvent": {
        "inputs": [
          "branch", 
          "votePeriod", 
          "eventID", 
          "sender"
        ], 
        "label": "Add Report To Event", 
        "method": "addReportToEvent", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "addReportersPaidSoFar": {
        "inputs": [
          "branch", 
          "event"
        ], 
        "label": "Add Reporters Paid So Far", 
        "method": "addReportersPaidSoFar", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "addRoundTwo": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Add Round Two", 
        "method": "addRoundTwo", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "addToWeightOfReport": {
        "inputs": [
          "period", 
          "event", 
          "report", 
          "amount"
        ], 
        "label": "Add To Weight Of Report", 
        "method": "addToWeightOfReport", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "adjustPeriodShareValueOutstanding": {
        "inputs": [
          "branch", 
          "expIndex", 
          "amount"
        ], 
        "label": "Adjust Period Share Value Outstanding", 
        "method": "adjustPeriodShareValueOutstanding", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "deleteEvent": {
        "inputs": [
          "branch", 
          "period", 
          "event"
        ], 
        "label": "Delete Event", 
        "method": "deleteEvent", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getAfterRep": {
        "inputs": [
          "branch", 
          "period", 
          "sender"
        ], 
        "label": "Get After Rep", 
        "method": "getAfterRep", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getBeforeRep": {
        "inputs": [
          "branch", 
          "period", 
          "sender"
        ], 
        "label": "Get Before Rep", 
        "method": "getBeforeRep", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getCurrentMode": {
        "inputs": [
          "period", 
          "event"
        ], 
        "label": "Get Current Mode", 
        "method": "getCurrentMode", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getCurrentModeItems": {
        "inputs": [
          "period", 
          "event"
        ], 
        "label": "Get Current Mode Items", 
        "method": "getCurrentModeItems", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getEncryptedReport": {
        "inputs": [
          "branch", 
          "expDateIndex", 
          "reporter", 
          "event"
        ], 
        "label": "Get Encrypted Report", 
        "method": "getEncryptedReport", 
        "returns": "int256[]", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getEthicReport": {
        "inputs": [
          "branch", 
          "period", 
          "event", 
          "sender"
        ], 
        "label": "Get Ethic Report", 
        "method": "getEthicReport", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getEvent": {
        "inputs": [
          "branch", 
          "expDateIndex", 
          "eventIndex"
        ], 
        "label": "Get Event", 
        "method": "getEvent", 
        "parser": "parseMarket", 
        "returns": "hash", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getEventIndex": {
        "inputs": [
          "period", 
          "eventID"
        ], 
        "label": "Get Event Index", 
        "method": "getEventIndex", 
        "returns": "number", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getEvents": {
        "inputs": [
          "branch", 
          "expDateIndex"
        ], 
        "label": "Get Events", 
        "method": "getEvents", 
        "parser": "parseMarkets", 
        "returns": "hash[]", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getEventsRange": {
        "inputs": [
          "branch", 
          "expDateIndex", 
          "start", 
          "end"
        ], 
        "label": "Get Events Range", 
        "method": "getEventsRange", 
        "parser": "parseMarkets", 
        "returns": "int256[]", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getLesserReportNum": {
        "inputs": [
          "branch", 
          "period", 
          "event"
        ], 
        "label": "Get Lesser Report Num", 
        "method": "getLesserReportNum", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getNumEventsToReportOn": {
        "inputs": [
          "branch", 
          "expDateIndex"
        ], 
        "label": "Get Num Events To Report On", 
        "method": "getNumEventsToReportOn", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getNumRemoved": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Get Num Removed", 
        "method": "getNumRemoved", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getNumReportsActual": {
        "inputs": [
          "branch", 
          "votePeriod", 
          "sender"
        ], 
        "label": "Get Num Reports Actual", 
        "method": "getNumReportsActual", 
        "returns": "number", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getNumReportsEvent": {
        "inputs": [
          "branch", 
          "votePeriod", 
          "eventID"
        ], 
        "label": "Get Num Reports Event", 
        "method": "getNumReportsEvent", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getNumRequired": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Get Num Required", 
        "method": "getNumRequired", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getNumRoundTwo": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Get Num Round Two", 
        "method": "getNumRoundTwo", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getNumberEvents": {
        "inputs": [
          "branch", 
          "expDateIndex"
        ], 
        "label": "Get Number Events", 
        "method": "getNumberEvents", 
        "returns": "number", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getPeriodDormantRep": {
        "inputs": [
          "branch", 
          "period", 
          "sender"
        ], 
        "label": "Get Period Dormant Rep", 
        "method": "getPeriodDormantRep", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getPeriodRepConstant": {
        "inputs": [
          "branch", 
          "votePeriod", 
          "sender"
        ], 
        "label": "Get Period Rep Constant", 
        "method": "getPeriodRepConstant", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getRepEvent": {
        "inputs": [
          "branch", 
          "votePeriod", 
          "event"
        ], 
        "label": "Get Rep Event", 
        "method": "getRepEvent", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getReport": {
        "inputs": [
          "branch", 
          "period", 
          "event", 
          "sender"
        ], 
        "label": "Get Report", 
        "method": "getReport", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getReportHash": {
        "inputs": [
          "branch", 
          "expDateIndex", 
          "reporter", 
          "event"
        ], 
        "label": "Get Report Hash", 
        "method": "getReportHash", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getReportersPaidSoFar": {
        "inputs": [
          "branch", 
          "event"
        ], 
        "label": "Get Reporters Paid So Far", 
        "method": "getReportersPaidSoFar", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getRequired": {
        "inputs": [
          "event"
        ], 
        "label": "Get Required", 
        "method": "getRequired", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getShareValue": {
        "inputs": [
          "branch", 
          "expIndex"
        ], 
        "label": "Get Share Value", 
        "method": "getShareValue", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getSubsidy": {
        "inputs": [
          "branch", 
          "period", 
          "event"
        ], 
        "label": "Get Subsidy", 
        "method": "getSubsidy", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getWeightOfReport": {
        "inputs": [
          "period", 
          "event", 
          "report"
        ], 
        "label": "Get Weight Of Report", 
        "method": "getWeightOfReport", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "moveEvent": {
        "inputs": [
          "branch", 
          "event"
        ], 
        "label": "Move Event", 
        "method": "moveEvent", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "refundCost": {
        "inputs": [
          "to", 
          "value"
        ], 
        "label": "Refund Cost", 
        "method": "refundCost", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "removeEvent": {
        "inputs": [
          "branch", 
          "period"
        ], 
        "label": "Remove Event", 
        "method": "removeEvent", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setAfterRep": {
        "inputs": [
          "branch", 
          "period", 
          "rep", 
          "sender"
        ], 
        "label": "Set After Rep", 
        "method": "setAfterRep", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setBeforeRep": {
        "inputs": [
          "branch", 
          "period", 
          "rep", 
          "sender"
        ], 
        "label": "Set Before Rep", 
        "method": "setBeforeRep", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setCurrentMode": {
        "inputs": [
          "period", 
          "event", 
          "mode"
        ], 
        "label": "Set Current Mode", 
        "method": "setCurrentMode", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setCurrentModeItems": {
        "inputs": [
          "period", 
          "event", 
          "modeReport"
        ], 
        "label": "Set Current Mode Items", 
        "method": "setCurrentModeItems", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setEncryptedReport": {
        "inputs": [
          "branch", 
          "expDateIndex", 
          "reporter", 
          "report", 
          "salt", 
          "ethics", 
          "event"
        ], 
        "label": "Set Encrypted Report", 
        "method": "setEncryptedReport", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setEthicReport": {
        "inputs": [
          "branch", 
          "period", 
          "event", 
          "ethics", 
          "sender"
        ], 
        "label": "Set Ethic Report", 
        "method": "setEthicReport", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setEventRequired": {
        "inputs": [
          "branch", 
          "period", 
          "event"
        ], 
        "label": "Set Event Required", 
        "method": "setEventRequired", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setLesserReportNum": {
        "inputs": [
          "branch", 
          "period", 
          "event", 
          "num"
        ], 
        "label": "Set Lesser Report Num", 
        "method": "setLesserReportNum", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setNumEventsToReportOn": {
        "inputs": [
          "branch"
        ], 
        "label": "Set Num Events To Report On", 
        "method": "setNumEventsToReportOn", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "setNumReportsEvent": {
        "inputs": [
          "branch", 
          "votePeriod", 
          "eventID", 
          "num"
        ], 
        "label": "Set Num Reports Event", 
        "method": "setNumReportsEvent", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setPeriodDormantRep": {
        "inputs": [
          "branch", 
          "period", 
          "rep", 
          "sender"
        ], 
        "label": "Set Period Dormant Rep", 
        "method": "setPeriodDormantRep", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setPeriodRepConstant": {
        "inputs": [
          "branch", 
          "votePeriod", 
          "sender", 
          "value"
        ], 
        "label": "Set Period Rep Constant", 
        "method": "setPeriodRepConstant", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setReport": {
        "inputs": [
          "branch", 
          "period", 
          "event", 
          "report", 
          "sender"
        ], 
        "label": "Set Report", 
        "method": "setReport", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setReportHash": {
        "inputs": [
          "branch", 
          "expDateIndex", 
          "reporter", 
          "reportHash", 
          "event"
        ], 
        "label": "Set Report Hash", 
        "method": "setReportHash", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }
    }, 
    "Faucets": {
      "cashFaucet": {
        "label": "Cash Faucet", 
        "method": "cashFaucet", 
        "returns": "number", 
        "send": true
      }, 
      "claimInitialRep": {
        "inputs": [
          "parent", 
          "branch"
        ], 
        "label": "Claim Initial Rep", 
        "method": "claimInitialRep", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "fundNewAccount": {
        "events": [
          "sentCash", 
          "fundedAccount"
        ], 
        "inputs": [
          "branch"
        ], 
        "label": "Fund Account", 
        "method": "fundNewAccount", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "reputationFaucet": {
        "inputs": [
          "branch"
        ], 
        "label": "Reputation Faucet", 
        "method": "reputationFaucet", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }
    }, 
    "ForkPenalize": {
      "penalizeOnForkedEvent": {
        "inputs": [
          "branch", 
          "event"
        ], 
        "label": "Penalize On Forked Event", 
        "method": "penalizeOnForkedEvent", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "proportionCorrectForkEvent": {
        "inputs": [
          "event"
        ], 
        "label": "Proportion Correct Fork Event", 
        "method": "proportionCorrectForkEvent", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }
    }, 
    "Forking": {
      "exchangeRate": {
        "inputs": [
          "branch"
        ], 
        "label": "Exchange Rate", 
        "method": "exchangeRate", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "fork": {
        "events": [
          "Transfer", 
          "sentCash", 
          "penalizationCaughtUp", 
          "collectedFees"
        ], 
        "inputs": [
          "event", 
          "branch", 
          "forkedOverEthicality"
        ], 
        "label": "Fork", 
        "method": "fork", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "move_event": {
        "inputs": [
          "event"
        ], 
        "label": "Move event", 
        "method": "move_event", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "resolveForkEvent": {
        "inputs": [
          "branch", 
          "event"
        ], 
        "label": "Resolve Fork Event", 
        "method": "resolveForkEvent", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "resolveForkedEvent": {
        "inputs": [
          "branch", 
          "event"
        ], 
        "label": "Resolve Forked Event", 
        "method": "resolveForkedEvent", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "resolve_fork": {
        "inputs": [
          "branch"
        ], 
        "label": "Resolve fork", 
        "method": "resolve_fork", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }
    }, 
    "FxpFunctions": {
      "fx_exp": {
        "inputs": [
          "x"
        ], 
        "label": "Fx exp", 
        "method": "fx_exp", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "fx_log": {
        "inputs": [
          "x"
        ], 
        "label": "Fx log", 
        "method": "fx_log", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "sqrt": {
        "inputs": [
          "n"
        ], 
        "label": "Sqrt", 
        "method": "sqrt", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }
    }, 
    "Info": {
      "getCreationFee": {
        "inputs": [
          "ID"
        ], 
        "label": "Get Creation Fee", 
        "method": "getCreationFee", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getCreator": {
        "inputs": [
          "ID"
        ], 
        "label": "Get Creator", 
        "method": "getCreator", 
        "returns": "address", 
        "signature": [
          "int256"
        ]
      }, 
      "getDescription": {
        "inputs": [
          "ID"
        ], 
        "label": "Get Description", 
        "method": "getDescription", 
        "returns": "string", 
        "signature": [
          "int256"
        ]
      }, 
      "getDescriptionLength": {
        "inputs": [
          "ID"
        ], 
        "label": "Get Description Length", 
        "method": "getDescriptionLength", 
        "returns": "int", 
        "signature": [
          "int256"
        ]
      }, 
      "setInfo": {
        "inputs": [
          "ID", 
          "description", 
          "creator", 
          "fee"
        ], 
        "label": "Set Info", 
        "method": "setInfo", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "bytes", 
          "int256", 
          "int256"
        ]
      }
    }, 
    "LogReturn": {}, 
    "MakeReports": {
      "makeHash": {
        "inputs": [
          "salt", 
          "report", 
          "eventID", 
          "sender"
        ], 
        "label": "Make Hash", 
        "method": "makeHash", 
        "returns": "hash", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "submitReport": {
        "events": [
          "penalizationCaughtUp", 
          "submittedReportHash"
        ], 
        "fixed": [
          3
        ], 
        "inputs": [
          "event", 
          "salt", 
          "report", 
          "ethics"
        ], 
        "label": "Reveal Report", 
        "method": "submitReport", 
        "mutable": true, 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "submitReportHash": {
        "events": [
          "penalizationCaughtUp", 
          "submittedReportHash"
        ], 
        "inputs": [
          "event", 
          "reportHash", 
          "encryptedReport", 
          "encryptedSalt", 
          "ethics"
        ], 
        "label": "Commit Report", 
        "method": "submitReportHash", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "validateReport": {
        "fixed": [
          3, 
          7
        ], 
        "inputs": [
          "eventID", 
          "branch", 
          "votePeriod", 
          "report", 
          "forkedOverEthicality", 
          "forkedOverThisEvent", 
          "roundTwo", 
          "balance"
        ], 
        "label": "Validate Report", 
        "method": "validateReport", 
        "returns": "number", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }
    }, 
    "Markets": {
      "addFees": {
        "inputs": [
          "market", 
          "amount"
        ], 
        "label": "Add Fees", 
        "method": "addFees", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "addTrade": {
        "inputs": [
          "market", 
          "trade_id", 
          "last_id"
        ], 
        "label": "Add Trade", 
        "method": "addTrade", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getBondsMan": {
        "inputs": [
          "market"
        ], 
        "label": "Get Bonds Man", 
        "method": "getBondsMan", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getBranchID": {
        "inputs": [
          "market"
        ], 
        "label": "Get Branch ID", 
        "method": "getBranchID", 
        "returns": "hash", 
        "signature": [
          "int256"
        ]
      }, 
      "getCreationTime": {
        "inputs": [
          "market"
        ], 
        "label": "Get Creation Time", 
        "method": "getCreationTime", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getCumScale": {
        "inputs": [
          "market"
        ], 
        "label": "Get Cum Scale", 
        "method": "getCumScale", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getExtraInfo": {
        "inputs": [
          "market"
        ], 
        "label": "Get Extra Info", 
        "method": "getExtraInfo", 
        "returns": "string", 
        "signature": [
          "int256"
        ]
      }, 
      "getExtraInfoLength": {
        "inputs": [
          "market"
        ], 
        "label": "Get Extra Info Length", 
        "method": "getExtraInfoLength", 
        "returns": "int", 
        "signature": [
          "int256"
        ]
      }, 
      "getFees": {
        "inputs": [
          "market"
        ], 
        "label": "Get Fees", 
        "method": "getFees", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getLastExpDate": {
        "inputs": [
          "market"
        ], 
        "label": "Get Last Exp Date", 
        "method": "getLastExpDate", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getLastOutcomePrice": {
        "inputs": [
          "market", 
          "outcome"
        ], 
        "label": "Get Last Outcome Price", 
        "method": "getLastOutcomePrice", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getLastTrade": {
        "inputs": [
          "market"
        ], 
        "label": "Get Last Trade", 
        "method": "getLastTrade", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getMakerFees": {
        "inputs": [
          "market"
        ], 
        "label": "Get Maker Fees", 
        "method": "getMakerFees", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getMarketEvent": {
        "inputs": [
          "market", 
          "index"
        ], 
        "label": "Get Market Event", 
        "method": "getMarketEvent", 
        "parser": "parseMarket", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getMarketEvents": {
        "inputs": [
          "market"
        ], 
        "label": "Get Market Events", 
        "method": "getMarketEvents", 
        "parser": "parseMarkets", 
        "returns": "hash[]", 
        "signature": [
          "int256"
        ]
      }, 
      "getMarketNumOutcomes": {
        "inputs": [
          "market"
        ], 
        "label": "Get Market Num Outcomes", 
        "method": "getMarketNumOutcomes", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getNumEvents": {
        "inputs": [
          "market"
        ], 
        "label": "Get Num Events", 
        "method": "getNumEvents", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getOneWinningOutcome": {
        "inputs": [
          "market", 
          "num"
        ], 
        "label": "Get One Winning Outcome", 
        "method": "getOneWinningOutcome", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getOriginalTradingPeriod": {
        "inputs": [
          "market"
        ], 
        "label": "Get Original Trading Period", 
        "method": "getOriginalTradingPeriod", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getParticipantSharesPurchased": {
        "inputs": [
          "market", 
          "trader", 
          "outcome"
        ], 
        "label": "Get Participant Shares Purchased", 
        "method": "getParticipantSharesPurchased", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getPushedForward": {
        "inputs": [
          "market"
        ], 
        "label": "Get Pushed Forward", 
        "method": "getPushedForward", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getSender": {
        "label": "Get Sender", 
        "method": "getSender", 
        "returns": "int256"
      }, 
      "getSharesPurchased": {
        "inputs": [
          "market", 
          "outcome"
        ], 
        "label": "Get Shares Purchased", 
        "method": "getSharesPurchased", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getSharesValue": {
        "inputs": [
          "market"
        ], 
        "label": "Get Shares Value", 
        "method": "getSharesValue", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getTotalSharesPurchased": {
        "inputs": [
          "market"
        ], 
        "label": "Get Total Shares Purchased", 
        "method": "getTotalSharesPurchased", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getTradingFee": {
        "inputs": [
          "market"
        ], 
        "label": "Get Trading Fee", 
        "method": "getTradingFee", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getTradingPeriod": {
        "inputs": [
          "market"
        ], 
        "label": "Get Trading Period", 
        "method": "getTradingPeriod", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getVolume": {
        "inputs": [
          "market"
        ], 
        "label": "Get Volume", 
        "method": "getVolume", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getWinningOutcomes": {
        "inputs": [
          "market"
        ], 
        "label": "Get Winning Outcomes", 
        "method": "getWinningOutcomes", 
        "returns": "number[]", 
        "signature": [
          "int256"
        ]
      }, 
      "get_total_trades": {
        "inputs": [
          "market_id"
        ], 
        "label": "Get total trades", 
        "method": "get_total_trades", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "get_trade_ids": {
        "inputs": [
          "market_id", 
          "offset", 
          "numTradesToLoad"
        ], 
        "label": "Get trade ids", 
        "method": "get_trade_ids", 
        "returns": "hash[]", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getgasSubsidy": {
        "inputs": [
          "market"
        ], 
        "label": "Getgas Subsidy", 
        "method": "getgasSubsidy", 
        "returns": "int", 
        "signature": [
          "int256"
        ]
      }, 
      "initializeMarket": {
        "inputs": [
          "marketID", 
          "events", 
          "tradingPeriod", 
          "tradingFee", 
          "branch", 
          "tag1", 
          "tag2", 
          "tag3", 
          "makerFees", 
          "cumScale", 
          "numOutcomes", 
          "extraInfo", 
          "gasSubsidy", 
          "creationFee", 
          "lastExpDate"
        ], 
        "label": "Initialize Market", 
        "method": "initializeMarket", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256[]", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "bytes", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "modifyParticipantShares": {
        "inputs": [
          "marketID", 
          "trader", 
          "outcome", 
          "amount", 
          "cancel"
        ], 
        "label": "Modify Participant Shares", 
        "method": "modifyParticipantShares", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "modifyShares": {
        "inputs": [
          "marketID", 
          "outcome", 
          "amount"
        ], 
        "label": "Modify Shares", 
        "method": "modifyShares", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "modifySharesValue": {
        "inputs": [
          "marketID", 
          "amount"
        ], 
        "label": "Modify Shares Value", 
        "method": "modifySharesValue", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "refundClosing": {
        "inputs": [
          "market", 
          "to"
        ], 
        "label": "Refund Closing", 
        "method": "refundClosing", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "remove_trade_from_market": {
        "inputs": [
          "market_id", 
          "trade_id"
        ], 
        "label": "Remove trade from market", 
        "method": "remove_trade_from_market", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "returnTags": {
        "inputs": [
          "market"
        ], 
        "label": "Return Tags", 
        "method": "returnTags", 
        "returns": "hash[]", 
        "signature": [
          "int256"
        ]
      }, 
      "setMakerFees": {
        "inputs": [
          "market", 
          "makerFees"
        ], 
        "label": "Set Maker Fees", 
        "method": "setMakerFees", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setPrice": {
        "inputs": [
          "market", 
          "outcome", 
          "price"
        ], 
        "label": "Set Price", 
        "method": "setPrice", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setPushedForward": {
        "inputs": [
          "market", 
          "bool", 
          "sender"
        ], 
        "label": "Set Pushed Forward", 
        "method": "setPushedForward", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setTradingFee": {
        "inputs": [
          "market", 
          "fee"
        ], 
        "label": "Set Trading Fee", 
        "method": "setTradingFee", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setTradingPeriod": {
        "inputs": [
          "market", 
          "period"
        ], 
        "label": "Set Trading Period", 
        "method": "setTradingPeriod", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setWinningOutcomes": {
        "inputs": [
          "market", 
          "outcomes"
        ], 
        "label": "Set Winning Outcomes", 
        "method": "setWinningOutcomes", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256", 
          "int256[]"
        ]
      }
    }, 
    "Payout": {
      "oneOutcome": {
        "events": [
          "payout"
        ], 
        "inputs": [
          "market", 
          "winningOutcome", 
          "sender", 
          "categoricalPointFive", 
          "numOutcomes"
        ], 
        "label": "One Outcome", 
        "method": "oneOutcome", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "twoOutcomes": {
        "events": [
          "payout"
        ], 
        "inputs": [
          "market", 
          "winningOutcome", 
          "event", 
          "sender"
        ], 
        "label": "Two Outcomes", 
        "method": "twoOutcomes", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256[]", 
          "int256", 
          "int256"
        ]
      }
    }, 
    "PenalizationCatchup": {
      "penalizationCatchup": {
        "events": [
          "penalizationCaughtUp"
        ], 
        "inputs": [
          "branch", 
          "sender"
        ], 
        "label": "Reporting Cycle Catch-Up", 
        "method": "penalizationCatchup", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }
    }, 
    "PenalizeNotEnoughReports": {
      "proveReporterDidntReportEnough": {
        "inputs": [
          "branch", 
          "reporter", 
          "eventExample"
        ], 
        "label": "Prove Reporter Didnt Report Enough", 
        "method": "proveReporterDidntReportEnough", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }
    }, 
    "ProportionCorrect": {
      "proportionCorrect": {
        "inputs": [
          "event"
        ], 
        "label": "Proportion Correct", 
        "method": "proportionCorrect", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }
    }, 
    "Register": {
      "register": {
        "description": "Write registration timestamp to the blockchain", 
        "events": [
          "registration"
        ], 
        "label": "Register New Account", 
        "method": "register", 
        "returns": "number", 
        "send": true
      }
    }, 
    "Reporting": {
      "addDormantRep": {
        "inputs": [
          "branch", 
          "index", 
          "value"
        ], 
        "label": "Add Dormant Rep", 
        "method": "addDormantRep", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "addRep": {
        "inputs": [
          "branch", 
          "index", 
          "value"
        ], 
        "label": "Add Rep", 
        "method": "addRep", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "addReporter": {
        "inputs": [
          "branch", 
          "sender", 
          "amount", 
          "dormant", 
          "repToBonderOrBranch"
        ], 
        "label": "Add Reporter", 
        "method": "addReporter", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "adjustActiveRep": {
        "inputs": [
          "branch", 
          "amount"
        ], 
        "label": "Adjust Active Rep", 
        "method": "adjustActiveRep", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "balanceOf": {
        "inputs": [
          "branch", 
          "address"
        ], 
        "label": "Balance Of", 
        "method": "balanceOf", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "checkContractWhitelist": {
        "inputs": [
          "contract", 
          "address"
        ], 
        "label": "Check Contract Whitelist", 
        "method": "checkContractWhitelist", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "checkWhitelist": {
        "inputs": [
          "address"
        ], 
        "label": "Check Whitelist", 
        "method": "checkWhitelist", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getActiveRep": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Active Rep", 
        "method": "getActiveRep", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "getDormantRepByIndex": {
        "inputs": [
          "branch", 
          "repIndex"
        ], 
        "label": "Get Dormant Rep By Index", 
        "method": "getDormantRepByIndex", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getFork": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Fork", 
        "method": "getFork", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getNumberReporters": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Number Reporters", 
        "method": "getNumberReporters", 
        "returns": "number", 
        "signature": [
          "int256"
        ]
      }, 
      "getRepBalance": {
        "inputs": [
          "branch", 
          "address"
        ], 
        "label": "Get Rep Balance", 
        "method": "getRepBalance", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getRepByIndex": {
        "inputs": [
          "branch", 
          "repIndex"
        ], 
        "label": "Get Rep By Index", 
        "method": "getRepByIndex", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getReporterID": {
        "inputs": [
          "branch", 
          "index"
        ], 
        "label": "Get Reporter ID", 
        "method": "getReporterID", 
        "returns": "hash", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getReputation": {
        "inputs": [
          "address"
        ], 
        "label": "Get Reputation", 
        "method": "getReputation", 
        "returns": "hash[]", 
        "signature": [
          "int256"
        ]
      }, 
      "getTotalRep": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Total Rep", 
        "method": "getTotalRep", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "repIDToIndex": {
        "inputs": [
          "branch", 
          "repID"
        ], 
        "label": "Rep ID To Index", 
        "method": "repIDToIndex", 
        "returns": "number", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setFork": {
        "inputs": [
          "branch"
        ], 
        "label": "Set Fork", 
        "method": "setFork", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "setInitialReporters": {
        "inputs": [
          "parent", 
          "branchID"
        ], 
        "label": "Set Initial Reporters", 
        "method": "setInitialReporters", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "setRep": {
        "inputs": [
          "branch", 
          "index", 
          "newRep"
        ], 
        "label": "Set Rep", 
        "method": "setRep", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setSaleDistribution": {
        "inputs": [
          "addresses", 
          "balances", 
          "branchID"
        ], 
        "label": "Set Sale Distribution", 
        "method": "setSaleDistribution", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256[]", 
          "int256[]", 
          "int256"
        ]
      }, 
      "setWhitelist": {
        "inputs": [
          "contract", 
          "addresses"
        ], 
        "label": "Set Whitelist", 
        "method": "setWhitelist", 
        "returns": "string", 
        "send": true, 
        "signature": [
          "int256", 
          "int256[]"
        ]
      }, 
      "subtractDormantRep": {
        "inputs": [
          "branch", 
          "index", 
          "value"
        ], 
        "label": "Subtract Dormant Rep", 
        "method": "subtractDormantRep", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "subtractRep": {
        "inputs": [
          "branch", 
          "index", 
          "value"
        ], 
        "label": "Subtract Rep", 
        "method": "subtractRep", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "totalSupply": {
        "inputs": [
          "branch"
        ], 
        "label": "Total Supply", 
        "method": "totalSupply", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }
    }, 
    "ReportingThreshold": {
      "calculateReportTargetForEvent": {
        "inputs": [
          "branch", 
          "eventID", 
          "votePeriod", 
          "sender"
        ], 
        "label": "Calculate Report Target For Event", 
        "method": "calculateReportTargetForEvent", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "calculateReportingThreshold": {
        "inputs": [
          "branch", 
          "eventID", 
          "votePeriod", 
          "sender"
        ], 
        "label": "Calculate Reporting Threshold", 
        "method": "calculateReportingThreshold", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getEventCanReportOn": {
        "inputs": [
          "branch", 
          "expDateIndex", 
          "reporter", 
          "event"
        ], 
        "label": "Get Event Can Report On", 
        "method": "getEventCanReportOn", 
        "returns": "number", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getEventsToReportOn": {
        "inputs": [
          "branch", 
          "period", 
          "sender", 
          "start"
        ], 
        "label": "Get Events To Report On", 
        "method": "getEventsToReportOn", 
        "parser": "parseMarkets", 
        "returns": "int256[]", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "setReportingThreshold": {
        "inputs": [
          "event"
        ], 
        "label": "Set Reporting Threshold", 
        "method": "setReportingThreshold", 
        "returns": "int256", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }
    }, 
    "RoundTwo": {
      "resolve": {
        "inputs": [
          "branch", 
          "event"
        ], 
        "label": "Resolve", 
        "method": "resolve", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "roundTwoPostBond": {
        "events": [
          "Transfer", 
          "penalizationCaughtUp", 
          "collectedFees"
        ], 
        "inputs": [
          "branch", 
          "event", 
          "eventIndex", 
          "votePeriod"
        ], 
        "label": "Round Two Post Bond", 
        "method": "roundTwoPostBond", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "roundTwoResolve": {
        "inputs": [
          "branch", 
          "event", 
          "eventIndex", 
          "sender"
        ], 
        "label": "Round Two Resolve", 
        "method": "roundTwoResolve", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }
    }, 
    "RoundTwoPenalize": {
      "penalizeRoundTwoWrong": {
        "inputs": [
          "branch", 
          "event"
        ], 
        "label": "Penalize Round Two Wrong", 
        "method": "penalizeRoundTwoWrong", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }
    }, 
    "SendReputation": {
      "allowance": {
        "inputs": [
          "owner", 
          "spender"
        ], 
        "label": "Allowance", 
        "method": "allowance", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "approve": {
        "events": [
          "Approval"
        ], 
        "inputs": [
          "branch", 
          "spender", 
          "value"
        ], 
        "label": "Approve", 
        "method": "approve", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "convertToActiveRep": {
        "events": [
          "penalizationCaughtUp", 
          "collectedFees"
        ], 
        "inputs": [
          "branch", 
          "value"
        ], 
        "label": "Convert To Active Rep", 
        "method": "convertToActiveRep", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "convertToDormantRep": {
        "events": [
          "penalizationCaughtUp", 
          "collectedFees"
        ], 
        "inputs": [
          "branch", 
          "value"
        ], 
        "label": "Convert To Dormant Rep", 
        "method": "convertToDormantRep", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "sendReputation": {
        "events": [
          "Transfer", 
          "collectedFees", 
          "penalizationCaughtUp"
        ], 
        "inputs": [
          "branch", 
          "recver", 
          "value"
        ], 
        "label": "Send Reputation", 
        "method": "sendReputation", 
        "returns": "unfix", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "transfer": {
        "events": [
          "Transfer"
        ], 
        "inputs": [
          "branch", 
          "recver", 
          "value"
        ], 
        "label": "Transfer", 
        "method": "transfer", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "transferFrom": {
        "events": [
          "Transfer"
        ], 
        "inputs": [
          "branch", 
          "from", 
          "recver", 
          "value"
        ], 
        "label": "Transfer From", 
        "method": "transferFrom", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }
    }, 
    "SlashRep": {
      "slashRep": {
        "description": "Punish Reporter for insufficient Reports submitted", 
        "inputs": [
          "branch", 
          "salt", 
          "report", 
          "reporter", 
          "eventID"
        ], 
        "label": "Punish Reporter", 
        "method": "slashRep", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }
    }, 
    "Tags": {
      "getNumTagsInBranch": {
        "inputs": [
          "branch"
        ], 
        "label": "Get Num Tags In Branch", 
        "method": "getNumTagsInBranch", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "getTagPopularity": {
        "inputs": [
          "branch", 
          "tag"
        ], 
        "label": "Get Tag Popularity", 
        "method": "getTagPopularity", 
        "returns": "unfix", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getTagsInBranch": {
        "inputs": [
          "branch", 
          "offset", 
          "numTagsToLoad"
        ], 
        "label": "Get Tags In Branch", 
        "method": "getTagsInBranch", 
        "returns": "int256[]", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "getTagsInfo": {
        "inputs": [
          "branch", 
          "offset", 
          "numTagsToLoad"
        ], 
        "label": "Get Tags Info", 
        "method": "getTagsInfo", 
        "returns": "int256[]", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "increaseTagPopularity": {
        "fixed": [
          2
        ], 
        "inputs": [
          "branch", 
          "tag", 
          "fxpAmount"
        ], 
        "label": "Increase Tag Popularity", 
        "method": "increaseTagPopularity", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }
    }, 
    "Trade": {
      "short_sell": {
        "events": [
          "log_short_fill_tx", 
          "trade_logArrayReturn", 
          "sentCash"
        ], 
        "gas": 1059796, 
        "inputs": [
          "buyer_trade_id", 
          "max_amount", 
          "tradeGroupID"
        ], 
        "label": "Short sell", 
        "method": "short_sell", 
        "mutable": true, 
        "returns": "hash[]", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "trade": {
        "events": [
          "trade_logArrayReturn", 
          "log_fill_tx"
        ], 
        "gas": 787421, 
        "inputs": [
          "max_value", 
          "max_amount", 
          "trade_ids", 
          "tradeGroupID"
        ], 
        "label": "Trade", 
        "method": "trade", 
        "mutable": true, 
        "returns": "hash[]", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256[]", 
          "int256"
        ]
      }
    }, 
    "Trades": {
      "checkHash": {
        "inputs": [
          "tradeHash", 
          "sender"
        ], 
        "label": "Check Hash", 
        "method": "checkHash", 
        "returns": "number", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "commitTrade": {
        "gas": 147581, 
        "inputs": [
          "hash"
        ], 
        "label": "Commit Trade", 
        "method": "commitTrade", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "fill_trade": {
        "fixed": [
          1
        ], 
        "inputs": [
          "id", 
          "fill"
        ], 
        "label": "Fill trade", 
        "method": "fill_trade", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getBestAskID": {
        "inputs": [
          "market", 
          "outcome"
        ], 
        "label": "Get Best Ask ID", 
        "method": "getBestAskID", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getBestBidID": {
        "inputs": [
          "market", 
          "outcome"
        ], 
        "label": "Get Best Bid ID", 
        "method": "getBestBidID", 
        "returns": "int256", 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "getID": {
        "inputs": [
          "tradeID"
        ], 
        "label": "Get ID", 
        "method": "getID", 
        "returns": "hash", 
        "signature": [
          "int256"
        ]
      }, 
      "getTradeOwner": {
        "inputs": [
          "id"
        ], 
        "label": "Get Trade Owner", 
        "method": "getTradeOwner", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "get_amount": {
        "inputs": [
          "id"
        ], 
        "label": "Get amount", 
        "method": "get_amount", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "get_price": {
        "inputs": [
          "id"
        ], 
        "label": "Get price", 
        "method": "get_price", 
        "returns": "unfix", 
        "signature": [
          "int256"
        ]
      }, 
      "get_trade": {
        "inputs": [
          "id"
        ], 
        "label": "Get trade", 
        "method": "get_trade", 
        "parser": "parseTradeInfo", 
        "returns": "hash[]", 
        "signature": [
          "int256"
        ]
      }, 
      "get_trade_block": {
        "inputs": [
          "id"
        ], 
        "label": "Get trade block", 
        "method": "get_trade_block", 
        "returns": "int256", 
        "signature": [
          "int256"
        ]
      }, 
      "makeTradeHash": {
        "inputs": [
          "max_value", 
          "max_amount", 
          "trade_ids"
        ], 
        "label": "Make Trade Hash", 
        "method": "makeTradeHash", 
        "returns": "hash", 
        "signature": [
          "int256", 
          "int256", 
          "int256[]"
        ]
      }, 
      "remove_trade": {
        "inputs": [
          "id"
        ], 
        "label": "Remove trade", 
        "method": "remove_trade", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256"
        ]
      }, 
      "saveTrade": {
        "fixed": [
          3, 
          4
        ], 
        "inputs": [
          "trade_id", 
          "type", 
          "market", 
          "amount", 
          "price", 
          "sender", 
          "outcome"
        ], 
        "label": "Save Trade", 
        "method": "saveTrade", 
        "returns": "number", 
        "send": true, 
        "signature": [
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256", 
          "int256"
        ]
      }, 
      "update_trade": {
        "fixed": [
          1
        ], 
        "inputs": [
          "id", 
          "price"
        ], 
        "label": "Update trade", 
        "method": "update_trade", 
        "send": true, 
        "signature": [
          "int256", 
          "int256"
        ]
      }, 
      "zeroHash": {
        "label": "Zero Hash", 
        "method": "zeroHash", 
        "returns": "number", 
        "send": true
      }
    }
  }
}